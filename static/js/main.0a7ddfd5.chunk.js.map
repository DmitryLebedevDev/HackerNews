{"version":3,"sources":["components/userPage/UserPage.module.css","components/StoryPage/StorysList.module.css","redux/init-reducersType.ts","redux/init-reducers.ts","components/header.jsx","redux/storys-reducersType.ts","api/api.js","helpers/function.js","redux/storys-reducers.ts","components/decorComponent/load.tsx","components/decorComponent/minLoadCenter.tsx","components/CommentsBlock/CommentsBlock.tsx","components/StoryPage/StoryIrem.tsx","components/StoryPage/StoryCommentOpen.tsx","components/helpers-components/ErorrPage.tsx","components/StoryPage/StorysList.tsx","components/StoryPage/StorysListContiner.jsx","redux/user-reducersType.ts","redux/user-reducers.ts","components/userPage/UserPage.tsx","components/userPage/UserPageContainer.tsx","components/userPage/UserPageSubContainer.tsx","components/userPage/UserPageCommetnsContainer.tsx","redux/jobs-reducersType.ts","redux/jobs-reducers.ts","components/jobs/JobsItem.tsx","components/jobs/JobsList.tsx","components/jobs/JobsContainer.tsx","redux/getByid-reducersType.ts","redux/getById-reducers.ts","components/decorComponent/TableItem/TableItem.tsx","components/decorComponent/TableItem/TableItemsNumber.tsx","components/getById/GetByIdFieldInput.tsx","components/userPage/UserSmol.tsx","components/getById/GetByIdPageItem.tsx","components/getById/GetByIdPageContainer.tsx","redux/newStorys-reducersType.ts","redux/newStorys-reducers.ts","components/newStorys/newStorysContainer.tsx","redux/ask-reducersType.ts","redux/ask-reducers.ts","components/ask/askContiner.tsx","components/Content.jsx","redux/store.ts","App.tsx","serviceWorker.js","index.js","components/header.module.css","components/getById/GetByIdPage.module.css","components/CommentsBlock/CommentsBlock.module.css","components/decorComponent/TableItem/TableItem.module.css","components/decorComponent/load.module.css","components/decorComponent/minLoadCenter.module.css","components/jobs/Jobs.module.css"],"names":["module","exports","INIT","start","init","initReducer","state","type","Header","AppBar","position","className","styles","Header__wrap","Header__item","to","ADD_STORY","ADD_COMMENT_TO_STORY","START_LOAD_STORY","STOP_LOAD_STORY","START_LOAD_STORY_COMMETNS","STOP_LOAD_STORY_COMMETNS","ADD_LEN_STORY","LEN_MAX_ON","axiosBase","axios","baseURL","maxItems","get","then","res","data","getElementById","id","getElementByUserId","getItemsArrayLoad","arr","Promise","req","promiseArr","items","t","length","push","result","all","info","getItemsLoadS","indexMaxItem","count","a","storysArr","indexsLoading","getItems","storys","story","index","arrPromise","resultObj","comments","undefined","url","author","by","time","fullLenComments","descendants","commentsId","kids","score","header","title","commentsIsLoad","deleted","name","text","commentsIdArr","ObjOfUnDate","coutTime","currentSeconts","date1","Date","getTimezoneOffset","date2","prototype","getUnixTime","this","getTime","now","ObjOfUnDateToString","objDate","Intl","DateTimeFormat","month","day","year","format","egoDateToString","unDate","diffrent","Math","ceil","JsonComent","path","json","arrPromis","promis","infoArrItem","error","newPath","valueComments","key","commentsLeng","startLoadStoryComments","idStory","stopLoadStoryComments","addStory","arrayStorys","addStoryComment","addCommentToStoryThunk","dispatch","infoStory","sort","b","arrComments","infoComments","Object","keys","lenStory","lenIsMax","storysIsLoad","storeReducers","action","lenght","map","item","Load","alt","src","MinLoadCenter","Center","CircularProgress","color","BlockComment","props","useState","isOpenComment","openComment","current","CommentBlock","CommentBlock__name","dangerouslySetInnerHTML","__html","CommentBlock__content","isLoad","commetnsArr","Story__linkComments","onClick","r","funcBtn","Button","StoryItem","link","isLink","commentsDefOpen","openIsComment","statusRecuest","setStatusRecuest","Story","Story__header","href","Story__link_header","Story__info","Story__blockCenter","Story__linkToProfile","connect","storyIsLoad","addStoryThuck","withRouter","currentStory","page","setPage","find","match","params","storyId","ErorrPage","StorysList","request","useRef","addFunc","addTopStoryThunk","funcAdd","useEffect","startScroll","event","document","body","scrollHeight","documentElement","scrollTop","clientHeight","window","addEventListener","removeEventListener","StotyList","LinearProgress","style","marginTop","paddingBottom","variant","indexArrayStorys","fullPromiseRequest","arrStorys","CurrentState","currentMax","ADD_USER","ADD_USER_STORY","ADD_USER_COMMETNS","UP_COUT","START_LOAD","STOP_LOAD","MAX_ITEMS","ADD_USER_COMMETNS_OPEN","maxItem","startLoad","stopLoad","upCout","cout","addUserStory","addUserCommets","addCommentsOrStoryUser","whatUpNum","getState","user","users","cunt","StoryItems","CommentsItems","stop","submitted","slice","addUserStoryThunk","addUserThunk","userInfo","userReducers","console","log","com","idComments","currentUser","created","karma","about","favorites","UserPage","date","User","line","blockOne","aboutWrap","Links","fontSize","requersStatis","setrequersStatis","userId","store","React","memo","addUserCommentsThunk","addUserComentsOpenThunk","idUser","idComment","commetns","promisCommetns","userComments","forEach","content","ADD_JOBS","UP_INDEX","SET_INDEX_ARR","MAX_LOAD_LIST","upIndex","upIndexNum","addJobs","jobs","loadJobsNum","jobsIndexArr","isMax","jobsReducer","makeStyles","linkToJob","transition","egoTime","JobsItem","paddingLeft","paddingRight","Link","btn","margin","display","fontWeight","JobsList","styleMater","addFunBtn","jobsItems","List","addJobsThunk","getStory","stor","indexArr","currentLoad","value","SET_ITEM","START_TIMER","STOP_TIMER","SET_MAX_ITEM","REQUERS_IN_ITEM_START","REQUERS_IN_ITEM_STOP","SET_COMMENT_IN_ITEM","RESET_ITEM","STOP_CHECK_MAX_ITEM","requesInItemStart","requesInItemStop","setItem","CheckMaxItemThunk","maxNum","initState","isLoadInItem","TableItem","number","setT","col","TableItemsNumber","numbers","nums","GetByIdFieldInput","searchToUser","setSearchToUser","setText","setError","input","ref","onChange","target","setItemThunkStart","errorCode","setItemThunkEnd","resetItem","textAlign","Typography","component","Grid","container","alignItems","justify","spacing","Switch","checked","focus","UserSmol","userSmol","GetByIdPageItem","DOMitem","addCommentToStoryItemThunk","setCommentInItemThunk","ErrorMessage","getByItem","startCheckMaxItem","timer","setInterval","stopTimer","comment","promiss","addCommentToStory","centerBlock","center","SET_INDEX_STORY","INITIALIZE","ADD_STORYS","addStorys","setIndexStory","isInit","newStorys","initNewStoryPageThunk","IS_COUNT_LOAD_STORY","addStoryThunk","currentIndexStory","paddingTop","ADD_ASK","questions","ask","initThunk","asksPromis","asks","render","StorysListContiner","redusers","combineReducers","form","formReducer","clearInterval","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","AppCont","AppC","Boolean","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a7ddfd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"UserPage_User__GwmQZ\",\"userSmol\":\"UserPage_userSmol__1NQfp\",\"link\":\"UserPage_link__1qPbt\",\"Links\":\"UserPage_Links__232dH\",\"blockOne\":\"UserPage_blockOne__3SRiZ\",\"line\":\"UserPage_line__1tnSy\",\"about\":\"UserPage_about__1hhdh\",\"aboutWrap\":\"UserPage_aboutWrap__1JGDb\",\"content\":\"UserPage_content__1eegN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Story__linkComments\":\"StorysList_Story__linkComments__2fVSg\",\"CommentBlock__content\":\"StorysList_CommentBlock__content__3gL9t\",\"CommentBlock\":\"StorysList_CommentBlock__2IGN0\",\"CommentBlock__name\":\"StorysList_CommentBlock__name__2Sx9u\",\"Story\":\"StorysList_Story__AS8bO\",\"Story__header\":\"StorysList_Story__header__1hvoS\",\"Story__blockCenter\":\"StorysList_Story__blockCenter__1p_4l\",\"Story__link_header\":\"StorysList_Story__link_header__3gT92\",\"Story__linkToProfile\":\"StorysList_Story__linkToProfile__1bu2_\"};","export const INIT = \"INIT\";\r\n\r\nexport interface Iinit {\r\n  type: typeof INIT\r\n} \r\nexport type IinitReducerAction = Iinit\r\n\r\nexport default interface IinitReducerState {\r\n  init: boolean;\r\n}","import {\n  INIT, IinitReducerAction, Iinit\n} from './init-reducersType';\nimport IinitReducerState from \"./init-reducersType\";\nimport { ImyCastomThunk } from './storeType';\n\nexport type IinitReducerThunk<R> = ImyCastomThunk<R,IinitReducerAction>\n\nexport const init = (): Iinit => {\n  return {\n    type:INIT\n  }\n}\nexport const initThunk = (): IinitReducerThunk<Promise<void>> => async (dispatch: any) => {\n  dispatch(init());\n  //await dispatch(addTopStoryThunk());\n}\n\nconst start: IinitReducerState = {\n  init: false\n}\n\nfunction initReducer (state=start,action: IinitReducerAction): IinitReducerState {\n  if (action.type === INIT) {\n    return {\n      ...state,\n      init:true,\n    }\n  }\n  return state;\n}\n\nexport default initReducer","import React from 'react';\r\nimport styles from './header.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar } from '@material-ui/core';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <div className={styles.Header}>\r\n        <div className={styles.Header__wrap}>\r\n          <div className={styles.Header__item}>\r\n            <Link to={'/story'}>Top stories</Link>\r\n          </div>\r\n          <div className={styles.Header__item}>\r\n            <Link to={'/newStorys'}>new stories</Link>\r\n          </div>\r\n          <div className={styles.Header__item}>\r\n            <Link to={'/getById'}>getById</Link>\r\n          </div>\r\n          <div className={styles.Header__item}>\r\n            <Link to={'/ask'}>ask</Link>\r\n          </div>\r\n          <div className={styles.Header__item}>\r\n            <Link to={'/jobs'}>jobs</Link>\r\n          </div>  \r\n        </div>\r\n      </div>\r\n    </AppBar>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header","import {ICommetn} from './user-reducersType';\n\nexport const ADD_STORY = 'ADD_TOP_STORY';\nexport const ADD_COMMENT_TO_STORY = 'ADD_COMMENT_TO_STORY'; \nexport const START_LOAD_STORY = 'START_LOAD_STORY';\nexport const STOP_LOAD_STORY = 'STOP_LOAD_STORY';  \nexport const START_LOAD_STORY_COMMETNS = 'START_LOAD_STORY_COMMETNS';\nexport const STOP_LOAD_STORY_COMMETNS = 'STOP_LOAD_STORY_COMMETNS';\nexport const ADD_LEN_STORY = 'ADD_LEN_STORY';\nexport const LEN_MAX_ON = 'LEN_MAX_ON';\n\nexport interface IlenMaxOn {\n  type: typeof LEN_MAX_ON\n}\nexport interface IsetLenStory {\n  type: typeof ADD_LEN_STORY\n  lenght: number\n}\nexport interface IstartLoadStoryComments {\n  type: typeof START_LOAD_STORY_COMMETNS\n  id: number\n}\nexport interface IstopLoadStoryComments {\n  type: typeof STOP_LOAD_STORY_COMMETNS\n  id: number\n}\nexport interface IstartLoadStory {\n  type: typeof START_LOAD_STORY\n}\nexport interface IstopLoadStory {\n  type: typeof STOP_LOAD_STORY\n}\nexport interface IaddStory {\n  type: typeof ADD_STORY\n  storys: Istory[]\n}\nexport interface IaddStoryComment {\n  type: typeof ADD_COMMENT_TO_STORY\n  comments: any\n  idStory: number\n}\n\n\nexport type IStorysActions = IlenMaxOn|IsetLenStory|\n                             IstartLoadStoryComments|\n                             IstopLoadStoryComments|IstartLoadStory|\n                             IstartLoadStory|IstopLoadStory|\n                             IaddStory|IaddStoryComment\nexport default interface IstoreReducers{\n  storys: Istory[],\n  lenStory: number,\n  lenIsMax: boolean,\n  storysIsLoad: boolean,\n}\nexport interface Istory {\n  id: number,\n  author: string,\n  time: number,\n  fullLenComments: number,\n  comments: ICommetn[],\n  commentsId: number[],\n  score: number,\n  header: string,\n  url: string,\n  commentsIsLoad: boolean,\n  type?: 'story',\n}","import * as axios from 'axios';\n\nlet axiosBase = axios.create({\n  baseURL:'https://hacker-news.firebaseio.com/v0'\n  }\n);\n\nexport const getTopStorys = () => axiosBase.get('/topstories.json').then(res => res.data);\nexport const getTopJobs = () => axiosBase.get('/jobstories.json').then(res => res.data);\nexport const getAsk = () => axiosBase.get('/askstories.json').then(res => res.data);\nexport const maxItems = () => axiosBase.get('/maxitem.json').then(res => res.data);\n\nexport const getElementById = (id) => axiosBase.get(`/item/${id}.json`).then(res => res.data);\nexport const getElementByUserId = (id) => axiosBase.get(`/user/${id}.json`).then(res => res.data);\n","import {getElementById} from \"../api/api\";\n\n\nexport function getItemsArrayLoad (arr = []) {\n  return new Promise((res,req) => {\n    let promiseArr = [];\n    let items = [];\n    for(let t=0; t<arr.length; t++) {\n      promiseArr.push(getElementById(arr[t]).then(result => {\n        items.push(result);\n      }))\n    }\n    Promise.all(promiseArr).then(info => {\n      res(items);\n    })\n  })\n}\nexport async function getItemsLoadS (indexMaxItem,count) {\n  let storysArr = [];\n  while (storysArr.length < count) {\n    if (indexMaxItem === 0) {\n      break;\n    }\n    let indexsLoading = [];\n    for (let t=0; t<count && count-t>=1; t++) {\n      indexsLoading.push(indexMaxItem-t);\n    }\n    indexMaxItem-=count;\n    let storys = await getItems(indexsLoading);\n    if (storys && storys.story) {\n      storysArr.push(...storys.story)\n    }\n  }\n  return {\n    story: storysArr,\n    index: indexMaxItem\n  };\n}\nexport function getItems (arr) {\n  return new Promise ((res,req) => {\n    let arrPromise = [];\n    let resultObj = {\n      story: [],\n      comments: [],\n    };\n    for (let t=0; t<arr.length; t++) {\n      arrPromise.push(getElementById(arr[t]).then((res) => {\n        if (res && res.type === 'story') {\n          if (res.url !== undefined) {\n            resultObj.story.push({\n              id:res.id,\n              author: res.by,\n              time: res.time,\n              fullLenComments: res.descendants,\n              comments: [],\n              commentsId: res.kids,\n              score: res.score,\n              header: res.title,\n              url: res.url,\n              commentsIsLoad: false,\n            }); \n          }\n        }\n        if (res && res.type === 'comment') {\n          if (!res.deleted) {\n            resultObj.comments.push({\n              id: res.id,\n              name: res.by,\n              text: res.text,\n              //comments\n              //commentsLeng(pin):1\n              commentsIdArr: res.kids,\n            });\n          }\n        }\n      }));\n    }\n    Promise.all(arrPromise).then(info => {\n      res(resultObj);\n    })\n  })\n}\n\nexport function UnDate (currentSeconts) {\n  // eslint-disable-next-line no-extend-native\n  Date.prototype.getUnixTime = function() { return this.getTime()/1000|0 };\n  if(!Date.now) Date.now = function() { return new Date(); }\n  Date.time = function() { return Date.now().getUnixTime(); }\n  let someDate = new Date();\n  let theUnixTime = someDate.getUnixTime();\n  let diffrent = theUnixTime-currentSeconts\n  return diffrent;\n}\nexport function ObjOfUnDate (coutTime) {\n  let date1 = new Date(+new Date() + new Date().getTimezoneOffset()*60*1000);\n  //? разница между настоящим и прошлым\n  let date2 = UnDate(coutTime);\n  let currentDiff = (+date1/1000) - (+date2);\n  let diffrent = new Date(currentDiff*1000);\n  return diffrent\n}\nexport function ObjOfUnDateToString (coutTime) {\n  let objDate = ObjOfUnDate(coutTime);\n  let date = new Intl.DateTimeFormat(\"en-Us\",{\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  }).format(objDate);\n  return date\n}\nexport function egoDateToString (unDate) {\n  let time = ObjOfUnDate(unDate);\n  let diffrent = (new Date() - time)/1000;\n  if (diffrent < 60) {\n    return `${diffrent} seconds ego`;\n  }\n  if (diffrent < 3600) {\n    return `${Math.ceil(diffrent/60)} menutes ego`;\n  }\n  if (diffrent < 86400) {\n    return `${Math.ceil(diffrent/3600)} hours ego`;\n  }\n  if (diffrent < 2678400) {\n    return `${Math.ceil(diffrent/604800)} weeks ego`;\n  }\n  return ObjOfUnDateToString(unDate);\n}\n\n// func requesq tree comments\nexport function JsonComent(arr, path = [], commentsLen = 0) {\n  if (arr === undefined || !arr.length) {\n    return new Promise ((res,req) => res());\n  }\n  return new Promise((res, req) => {\n    let json = {};\n    let arrPromis = [];\n    for (let t = 0; t < arr.length; t++) {\n      let promis = getElementById(arr[t]).then(infoArrItem => {\n        return new Promise((info, error) => {\n          let newPath = [...path, arr[t]];\n          if (infoArrItem.deleted) {\n            info()\n          }\n          JsonComent(infoArrItem.kids, newPath).then(\n            comments => {\n              let valueComments = 0;\n              if (comments) {\n                for (let key in comments) {\n                  valueComments += +comments[key].commentsLeng;\n                }\n              }\n              if (infoArrItem.deleted) {\n                info()\n              }\n              json[arr[t]] = {\n                id: arr[t],\n                name: infoArrItem.by,\n                text: infoArrItem.text,\n                comments: comments,\n                commentsLeng: (infoArrItem.kids !== undefined) ? infoArrItem.kids.length + valueComments : '',\n                path: [...newPath],\n              }\n              info();\n            }   \n          )\n        })\n      })\n      arrPromis.push(promis);\n    }\n    Promise.all(arrPromis).then(result => {\n      res(json);\n    })\n  })\n}\n","import IstoreReducers, { Istory,\n  ADD_STORY,\n  ADD_COMMENT_TO_STORY,\n  START_LOAD_STORY,\n  STOP_LOAD_STORY,\n  START_LOAD_STORY_COMMETNS,\n  STOP_LOAD_STORY_COMMETNS,\n  ADD_LEN_STORY,\n  LEN_MAX_ON,\n  IStorysActions,\n  IlenMaxOn,\n  IsetLenStory,\n  IstartLoadStoryComments,\n  IstopLoadStoryComments,\n  IstartLoadStory,\n  IstopLoadStory,\n  IaddStory,\n  IaddStoryComment\n} from './storys-reducersType';\nimport { getTopStorys } from './../api/api';\nimport { getElementById } from './../api/api';\nimport { JsonComent } from '../helpers/function.js';\nimport { ICommetn } from './user-reducersType';\nimport {IstoryRequest} from '../api/apiType';\nimport { ImyCastomThunk } from './storeType';\n\nexport type IstorysReducerThunk<R> = ImyCastomThunk<R,IStorysActions>\n\nexport const lenMaxOn = ():IlenMaxOn => {\n  return {\n    type: LEN_MAX_ON\n  }\n}\n\nexport const setLenStory = (number:number):IsetLenStory => {\n  return {\n    type: ADD_LEN_STORY,\n    lenght: number,\n  }\n};\n\nexport const startLoadStoryComments = (idStory:number):IstartLoadStoryComments => {\n  return {\n    type: START_LOAD_STORY_COMMETNS,\n    id: idStory,\n  }\n};\n\nexport const stopLoadStoryComments = (idStory:number):IstopLoadStoryComments => {\n  return {\n    type: STOP_LOAD_STORY_COMMETNS,\n    id: idStory,\n  }\n};\n\nexport const startLoadStory = ():IstartLoadStory => {\n  return {\n    type: START_LOAD_STORY,\n  }\n};\nexport const stopLoadStory = ():IstopLoadStory => {\n  return {\n    type: STOP_LOAD_STORY,\n  }\n};\n\nexport const addStory = (arrayStorys: Istory[]):IaddStory => {\n  return {\n    type: ADD_STORY,\n    storys: arrayStorys,\n  }\n};\nconst addStoryComment = (idStory:number,comments:ICommetn[]):IaddStoryComment => {\n  return {\n    type: ADD_COMMENT_TO_STORY,\n    comments:comments,\n    idStory,\n  }\n};\n// sinhron load data\nexport const addCommentToStoryThunk = (idStory:number): IstorysReducerThunk<Promise<void>> => async (dispatch: any) => {\n  let infoStory = await getElementById(idStory);\n  if (infoStory.kids) {\n    infoStory.kids.sort((a:number,b:number) => a-b);\n    let arrComments = [];\n    dispatch(startLoadStoryComments(idStory));\n    for (let t=0; t<infoStory.kids.length; t++) {\n      let infoComments = JsonComent([infoStory.kids[t]],[idStory])\n      .then(comments => {\n        if (Object.keys(comments).length !== 0) {\n          dispatch(addStoryComment(idStory,comments));\n        }\n      });\n      arrComments.push(infoComments);\n    }\n    Promise.all(arrComments).then(() => dispatch(stopLoadStoryComments(idStory)));\n  }\n};\n\nexport const addStoryThuck = (id:number): IstorysReducerThunk<Promise<boolean>> => async (dispatch: any):Promise<boolean> => {\n  let story = await getElementById(id);\n  if (!story) {\n    return false\n  }\n  if (story.type !== 'story') {\n    return false\n  }\n  dispatch(addStory([{\n    id,\n    author: story.by,\n    time: story.time,\n    fullLenComments: story.descendants,\n    comments: [],\n    commentsId: story.kids,\n    score: story.score,\n    header: story.title,\n    url: story.url,\n    commentsIsLoad: false,\n  }]));\n  return true\n};\n\nexport const addTopStoryThunk = (): IstorysReducerThunk<Promise<void>> => async (dispatch:any,state: any) => {\n  return new Promise (async (res,req) => {\n    let indexArrayStorys = await getTopStorys();\n    let fullPromiseRequest = [];\n    let arrStorys: any = [];\n    let CurrentState = state();\n    if (CurrentState.storys.lenIsMax) {\n      res();\n      return;\n    }\n    let current = CurrentState.storys.lenStory;\n    let currentMax = current+25\n    if (currentMax >= 500) {\n      dispatch(lenMaxOn());\n    }\n    dispatch(startLoadStory());\n    for(let t = current; t<currentMax; t++) {\n      fullPromiseRequest.push(getElementById(indexArrayStorys[t]).then((infoStory: IstoryRequest) => {\n        if (infoStory) {\n          arrStorys.push({\n            id:indexArrayStorys[t],\n            author: infoStory.by,\n            time: infoStory.time,\n            fullLenComments: infoStory.descendants,\n            comments: [],\n            commentsId: infoStory.kids,\n            score: infoStory.score,\n            header: infoStory.title,\n            url: infoStory.url,\n            commentsIsLoad: false,\n          });\n        }\n      }));\n    }\n    Promise.all(fullPromiseRequest).then(info => {\n      dispatch(addStory(arrStorys));\n      dispatch(stopLoadStory());\n      dispatch(setLenStory(currentMax));\n      res()\n    })\n  })\n};\n\nconst start:IstoreReducers = {\n  storys: [],\n  lenStory: 0,\n  lenIsMax: false,\n  storysIsLoad: false,\n};\nfunction storeReducers (state = start, action: IStorysActions) {\n  switch (action.type) {\n    case LEN_MAX_ON: {\n      return {\n        ...state,\n        lenIsMax: true,\n      }\n    }\n    case ADD_LEN_STORY: {\n      return {\n        ...state,\n        lenStory: action.lenght,\n      }\n    }\n    case START_LOAD_STORY_COMMETNS: {\n      return {\n        ...state,\n        storys: state.storys.map(item => (item.id !== action.id) ? item : {...item,commentsIsLoad:true})\n      }\n    }\n    case STOP_LOAD_STORY_COMMETNS: {\n      return {\n        ...state,\n        storys: state.storys.map(item => (item.id !== action.id) ? item : {...item,commentsIsLoad:false})\n      }\n    }\n    case STOP_LOAD_STORY: {\n      return {\n        ...state,\n        storysIsLoad: false,\n      }\n    }\n    case START_LOAD_STORY: {\n      return {\n        ...state,\n        storysIsLoad: true,\n      }\n    }\n    case ADD_STORY: {\n      return {\n        ...state,\n        storys: [...state.storys,...action.storys],\n      }\n    }\n    case ADD_COMMENT_TO_STORY: {\n      let storys = state.storys.map(item => {\n        if (item.id !== action.idStory) {\n          return item\n        } else {\n          return {\n            ...item,\n            comments: [...item.comments,{...action.comments[Object.keys(action.comments)[0]]}]\n          }\n        }\n      })\n      return {\n        ...state,\n        storys: storys\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default storeReducers;\n","import React from 'react'\r\nimport styles from './load.module.css';\r\n\r\nexport default function Load() {\r\n  return (\r\n    <div className={styles.Load}>\r\n      <img alt=\"\" src=\"data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTYuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjwhRE9DVFlQRSBzdmcgUFVCTElDICItLy9XM0MvL0RURCBTVkcgMS4xLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLmR0ZCI+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgd2lkdGg9IjUxMnB4IiBoZWlnaHQ9IjUxMnB4IiB2aWV3Qm94PSIwIDAgMjYuMzQ5IDI2LjM1IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNi4zNDkgMjYuMzU7IiB4bWw6c3BhY2U9InByZXNlcnZlIj4KPGc+Cgk8Zz4KCQk8Y2lyY2xlIGN4PSIxMy43OTIiIGN5PSIzLjA4MiIgcj0iMy4wODIiIGZpbGw9IiMwMDAwMDAiLz4KCQk8Y2lyY2xlIGN4PSIxMy43OTIiIGN5PSIyNC41MDEiIHI9IjEuODQ5IiBmaWxsPSIjMDAwMDAwIi8+CgkJPGNpcmNsZSBjeD0iNi4yMTkiIGN5PSI2LjIxOCIgcj0iMi43NzQiIGZpbGw9IiMwMDAwMDAiLz4KCQk8Y2lyY2xlIGN4PSIyMS4zNjUiIGN5PSIyMS4zNjMiIHI9IjEuNTQxIiBmaWxsPSIjMDAwMDAwIi8+CgkJPGNpcmNsZSBjeD0iMy4wODIiIGN5PSIxMy43OTIiIHI9IjIuNDY1IiBmaWxsPSIjMDAwMDAwIi8+CgkJPGNpcmNsZSBjeD0iMjQuNTAxIiBjeT0iMTMuNzkxIiByPSIxLjIzMiIgZmlsbD0iIzAwMDAwMCIvPgoJCTxwYXRoIGQ9Ik00LjY5NCwxOS44NGMtMC44NDMsMC44NDMtMC44NDMsMi4yMDcsMCwzLjA1YzAuODQyLDAuODQzLDIuMjA4LDAuODQzLDMuMDUsMGMwLjg0My0wLjg0MywwLjg0My0yLjIwNywwLTMuMDUgICAgQzYuOTAyLDE4Ljk5Niw1LjUzNywxOC45ODgsNC42OTQsMTkuODR6IiBmaWxsPSIjMDAwMDAwIi8+CgkJPGNpcmNsZSBjeD0iMjEuMzY0IiBjeT0iNi4yMTgiIHI9IjAuOTI0IiBmaWxsPSIjMDAwMDAwIi8+Cgk8L2c+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPGc+CjwvZz4KPC9zdmc+Cg==\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport styles from './minLoadCenter.module.css';\r\n\r\n\r\nexport default function MinLoadCenter() {\r\n  return (\r\n    <div className={styles.Center}>\r\n      <CircularProgress color=\"secondary\" />\r\n    </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react';\nimport styles from './CommentsBlock.module.css';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport MinLoadCenter from '../decorComponent/minLoadCenter';\n\nexport function BlockComment(props: {\n    id?: number,\n    name?: string,\n    text: string,\n    comments?: any,\n    commentsLeng?: number,\n    fullLenComments?: number,\n    commetnsArr?: number[],\n    funcBtn?: any,\n    isLoad?: boolean,\n  }) {\n    let [isOpenComment, openComment] = useState(false);\n    let comments = [];\n    if (isOpenComment) {\n      if (props.comments) {\n        let keys = Object.keys(props.comments);\n        if (keys.length > 0) {\n          for (let current in props.comments) {\n            comments.push(<BlockComment\n              key={props.comments[current].id}\n              id={props.comments[current].id}\n              name={props.comments[current].name}\n              text={props.comments[current].text}\n              comments={props.comments[current].comments}\n              commentsLeng={props.comments[current].commentsLeng}\n              fullLenComments={props.comments[current].fullLenComments}\n            />)\n          }\n        } else {\n        }\n      }\n    }\n    return (\n      <div className={styles.CommentBlock}>\n        <h6 className={styles.CommentBlock__name}>\n          <Link to={`/user/${props.name}`}>{props.name}</Link>\n        </h6>\n        <div dangerouslySetInnerHTML={{ __html: props.text }} className={styles.CommentBlock__content}>\n        </div>\n        {\n          (props.isLoad) ? <MinLoadCenter/> :\n          (props.commentsLeng || ((props.commetnsArr) && (props.commetnsArr.length))) && (<>\n            <div className={styles.Story__linkComments} onClick={() => {\n              openComment(r => !r);\n              if (props.funcBtn && comments.length === 0) {\n                props.funcBtn();// start load data\n              } \n            }}>\n              <Button color=\"primary\">Comments {props.commentsLeng}</Button>\n            </div>\n            {comments}\n          </>)}\n      </div>\n    )\n }","import React,{useState} from 'react';\nimport styles from './StorysList.module.css';\nimport { Link as MaterialBottom, Button} from '@material-ui/core';\nimport { BlockComment } from '../CommentsBlock/CommentsBlock';\nimport { Link } from 'react-router-dom';\nimport MinLoadCenter from '../decorComponent/minLoadCenter';\nimport { egoDateToString } from '../../helpers/function';\nimport { Istory } from '../../redux/storys-reducersType';\n\nexport interface Iprops extends Istory {\n  addCommentToStoryThunk?: (id:number) => void;\n  commentsDefOpen?: boolean;\n  isLink?: boolean;\n}\n\nexport default function StoryItem(props: Iprops) {\n\n  let link = props.isLink ? false : true;\n  let [openIsComment, openComment] = useState((props.commentsDefOpen) ? true : false); // if comments is open\n  let [statusRecuest,setStatusRecuest] = useState(false);\n  let comments = [];\n  // if comments open and comments len 0 then request\n  if (!statusRecuest && openIsComment && Object.keys(props.comments).length === 0) {\n    if (props.addCommentToStoryThunk) {\n      props.addCommentToStoryThunk(props.id);\n      setStatusRecuest(true);\n    }\n  }\n  for (let current in props.comments) {\n    comments.push(\n      <BlockComment key={props.comments[current].id}\n        name={props.comments[current].name}\n        text={props.comments[current].text}\n        comments={props.comments[current].comments}\n        commentsLeng={props.comments[current].commentsLeng}\n        fullLenComments={props.comments[current].fullLenComments}\n      />\n    );\n  }\n    return (\n    <div className={styles.Story}>\n      <div className={styles.Story__header}>\n        <MaterialBottom href={(props.url) && props.url} className={styles.Story__link_header}>\n          {props.header}\n        </MaterialBottom>\n      </div>\n      <div className={styles.Story__info}>\n        <div className={styles.Story__blockCenter}>\n          {props.score} points by \n          <Link to={`/user/${props.author}`} className={styles.Story__linkToProfile}>\n            {props.author} \n          </Link> {egoDateToString(props.time)}\n          {(props.fullLenComments) ? (link) ? \n            <Link to={`/story/${props.id}`} className={styles.Story__linkComments}\n            onClick={() => { openComment(r => !r) }}>\n              <Button color=\"primary\">\n                comments {props.fullLenComments}\n              </Button> \n            </Link> : //!!!!!!!\n            <Button className={styles.Story__linkComments} \n            color=\"primary\" onClick={() => { openComment(r => !r)}}>\n              comments {props.fullLenComments}\n            </Button>\n           : ''}\n        </div>\n        {(openIsComment) && comments}\n        {(props.commentsIsLoad) ? <MinLoadCenter/> : ''}\n      </div>\n    </div>\n  )\n}\n/*\n<Link to={`/story/${props.id}`} className={styles.Story__linkComments}\n            onClick={() => { openComment(r => !r) }}>\n            <Button color=\"primary\">\n              comments {props.fullLenComments}\n            </Button>\n          </Link>*/","import * as React from 'react';\nimport {useState} from 'react';\nimport { match, RouteComponentProps, withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'\nimport { addStoryThuck } from '../../redux/storys-reducers';\nimport Load from './../decorComponent/load';\nimport  StoryItem from './StoryIrem';\nimport { addCommentToStoryThunk } from './../../redux/storys-reducers';\nimport { Istory } from '../../redux/storys-reducersType';\n\ninterface Iprops extends RouteComponentProps<any> {\n  match: match<{storyId:string}>;\n  story: Istory[];\n  storysIsLoad: boolean;\n  addStoryThuck: (id: number) => Promise<boolean>;\n  addCommentToStoryThunk: (idStory: number) => void\n}\n\nconst CommentContiner = (props:Iprops) => {\n  let currentStory;\n  let [page,setPage] = useState(false);\n  currentStory = props.story.find(item => item.id === +props.match.params.storyId)\n  if (!currentStory && !props.storysIsLoad) {\n    if (page) {\n      return <Redirect to='/error'/>\n    }\n    props.addStoryThuck(+props.match.params.storyId).then(() => setPage(true));\n    return (\n      <Load/>\n    )\n  }\n  if (currentStory) {\n\n    return (\n      <div>\n        <StoryItem {...currentStory}\n          addCommentToStoryThunk={props.addCommentToStoryThunk}\n          commentsDefOpen={true}\n        />\n      </div>\n    )\n  }\n  return (\n    <Load />\n  )\n}\nexport default connect((state:any) => {\n  return {\n    story: state.storys.storys,\n    storyIsLoad: state.storys.storysIsLoad,\n  }\n},{\n  addStoryThuck,\n  addCommentToStoryThunk,\n})(withRouter(CommentContiner));","import React from 'react'\n\nexport default function ErorrPage() {\n  return (\n    <div>\n      ERROR\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react';\nimport styles from './StorysList.module.css';\nimport { LinearProgress, Button } from '@material-ui/core';\nimport StoryItem from './StoryIrem';\nimport { Istory } from '../../redux/storys-reducersType';\n\ninterface Iprops {\n  addCommentToStoryThunk?: (id: number) => void;\n  addTopStoryThunk?: () => void;\n  funcAdd?: any;\n  storys: Istory[];\n  storysIsLoad: boolean;\n  lenIsMax: boolean;\n}\n\nexport default function StorysList(props: Iprops) {\n  let request = useRef(false);\n  let addFunc:any = props.addTopStoryThunk || props.funcAdd;\n  useEffect(() => {\n    request.current=false\n    // auto load\n    const startScroll = (event: any) => {\n      if (document.body.scrollHeight-150 <= \n        document.documentElement.scrollTop \n        + \n        document.documentElement.clientHeight && addFunc) {\n          if (!request.current) {\n            request.current = true;\n            addFunc();\n          }\n        }\n    }\n    window.addEventListener('scroll', startScroll);\n    return () => {\n      window.removeEventListener('scroll',startScroll);\n    }\n  },[props.storys.length]);\n  let storys = props.storys.map((item:Istory) => \n    <StoryItem key={item.id} addCommentToStoryThunk={props.addCommentToStoryThunk} {...item}/>)\n  return (\n    <div className={styles.StotyList}>\n      {storys}\n      {((props.storysIsLoad) && <LinearProgress />)}\n      {(!props.storysIsLoad && !props.lenIsMax) ? <div className={styles.Story__blockCenter}>\n        <div style={{marginTop: 10, paddingBottom: 15}}>\n          <Button onClick={() => addFunc()} variant=\"contained\" color=\"secondary\"> add stories </Button>\n        </div>\n      </div> : ''}\n    </div>\n  )\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React,{useEffect} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addCommentToStoryThunk, addTopStoryThunk } from './../../redux/storys-reducers';\r\nimport StorysList from './StorysList';\r\n\r\n\r\nfunction StoryListContiner(props) {\r\n  useEffect(()=>{\r\n    if (props.storys.length < 50) {\r\n      props.addTopStoryThunk();\r\n    }\r\n  },[props.story]);\r\n  return (\r\n    <StorysList \r\n      addCommentToStoryThunk={props.addCommentToStoryThunk}\r\n      storys={props.storys} \r\n      storysIsLoad={props.storysIsLoad}\r\n      addTopStoryThunk={props.addTopStoryThunk}\r\n      lenIsMax={props.lenIsMax}\r\n    />\r\n  )\r\n}\r\nexport default connect(\r\n  (state) => {\r\n    return {\r\n      storys:state.storys.storys,\r\n      storysIsLoad: state.storys.storysIsLoad,\r\n      lenIsMax: state.storys.lenIsMax,\r\n    }\r\n  }, {\r\n    addCommentToStoryThunk,\r\n    addTopStoryThunk,\r\n  }\r\n)(StoryListContiner);","import { Istory } from \"./storys-reducersType\";\r\nimport Istore from \"./storeType\";\r\n\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const ADD_USER_STORY = 'ADD_USER_STORY';\r\nexport const ADD_USER_COMMETNS  = 'ADD_USER_COMMETNS';\r\nexport const UP_COUT = 'UP_COUT';\r\nexport const START_LOAD = 'START_LOAD';\r\nexport const STOP_LOAD = 'STOP_LOAD';\r\nexport const MAX_ITEMS = 'MAX_ITEMS';\r\nexport const ADD_USER_COMMETNS_OPEN = 'ADD_USER_COMMETNS_OPEN';\r\n\r\nexport interface ImaxItem {\r\n  type: typeof MAX_ITEMS\r\n  id: string\r\n}\r\nexport interface IstartLoad {\r\n  type: typeof START_LOAD\r\n  id: string\r\n}\r\nexport interface IstopLoad {\r\n  type: typeof STOP_LOAD\r\n  id: string\r\n}\r\nexport interface IupCout {\r\n  type: typeof UP_COUT\r\n  id:string\r\n  cout: number\r\n}\r\nexport interface IaddUserStory {\r\n  type: typeof ADD_USER_STORY\r\n  id: string\r\n  storys: Istore[]\r\n}\r\nexport interface IaddUserComments {\r\n  type: typeof ADD_USER_COMMETNS\r\n  id: string\r\n  info: any[]\r\n}\r\nexport interface IaddUserCommentsOpen {\r\n  type: typeof ADD_USER_COMMETNS_OPEN\r\n  info: any[]\r\n  id: string\r\n  idComments: number\r\n}\r\nexport interface IaddUser {\r\n  type: typeof ADD_USER,\r\n  info: IUser\r\n}\r\n\r\nexport type IuserActions = ImaxItem|IstartLoad|\r\n                           IstopLoad|IupCout|\r\n                           IaddUserStory|IaddUserComments|\r\n                           IaddUserCommentsOpen|IaddUser\r\n\r\nexport default interface IuserReducers {\r\n  users: {\r\n    [key:string]: IUser,\r\n  }\r\n}\r\nexport interface IUser {\r\n  id:string,\r\n  created: number,\r\n  karma: number,\r\n  about?: string,\r\n  submitted?: number[],\r\n  story?: IStore[],\r\n  comments: ICommetn[],\r\n  favorites?: [],\r\n  cunt: number,\r\n  isLoad: boolean,\r\n  maxItems: boolean,\r\n}\r\nexport interface IStore extends Istory {\r\n  deleted?: boolean,\r\n  type?: 'story'\r\n}\r\nexport interface ICommetn {\r\n  id: number,\r\n  name: string,\r\n  text: string,\r\n  comments?: ICommetn[],\r\n  commentsLeng?:number\r\n  commentsIdArr: number[],\r\n  kids: number[],\r\n  type?: 'comment',\r\n  fullLenComments?: number,\r\n}","import IuserReducers, {\r\n  IUser,\r\n  ADD_USER,\r\n  ADD_USER_COMMETNS,\r\n  ADD_USER_COMMETNS_OPEN,\r\n  ADD_USER_STORY,\r\n  UP_COUT,\r\n  START_LOAD,\r\n  STOP_LOAD,\r\n  MAX_ITEMS,\r\n  IuserActions,\r\n  ImaxItem,\r\n  IstartLoad,\r\n  IstopLoad,\r\n  IupCout,\r\n  IaddUser,\r\n  IaddUserStory,\r\n  IaddUserComments,\r\n  IaddUserCommentsOpen,\r\n} from \"./user-reducersType\";\r\nimport { getElementByUserId } from \"../api/api\";\r\nimport {getItems} from '../helpers/function';\r\nimport IStore, { ImyCastomThunk } from \"./storeType\";\r\nimport {JsonComent} from '../helpers/function';\r\n\r\nexport type IuserReducersThunk<R> = ImyCastomThunk<R,IuserActions>\r\n\r\nconst maxItem = (id: string): ImaxItem => {\r\n  return {\r\n    type: MAX_ITEMS,\r\n    id,\r\n  }\r\n}\r\nconst startLoad = (id:string): IstartLoad => {\r\n  return {\r\n    type: START_LOAD,\r\n    id,\r\n  }\r\n}\r\nconst stopLoad = (id:string): IstopLoad => {\r\n  return {\r\n    type: STOP_LOAD,\r\n    id\r\n  }\r\n}\r\n\r\nconst upCout = (id:string,cout:number): IupCout => {\r\n  return {\r\n    type: UP_COUT,\r\n    cout,\r\n    id,\r\n  }\r\n}\r\n\r\nconst addUserStory = (id:string, storys: IStore[]): IaddUserStory => {\r\n  return {\r\n    type: ADD_USER_STORY,\r\n    id,\r\n    storys,\r\n  }\r\n}\r\nconst addUserCommets = (id: string, info: any[]): IaddUserComments => {\r\n  return {\r\n    type: ADD_USER_COMMETNS,\r\n    id,\r\n    info,\r\n  }\r\n}\r\nconst addUserComentsOpen = (id: string,idComments: number, info: any[]): IaddUserCommentsOpen => {\r\n  return {\r\n    type: ADD_USER_COMMETNS_OPEN,\r\n    info,\r\n    id,\r\n    idComments,\r\n  }\r\n}\r\nconst addUser = (info: IUser):IaddUser => {\r\n  return {\r\n    type: ADD_USER,\r\n    info,\r\n  }\r\n}\r\n\r\nexport const addUserComentsOpenThunk = (idUser: string, idComment: number) => (dispatch: any, getState: () => IStore) => {\r\n  let commetns:any[] = [];\r\n  let promisCommetns: any[] = [];\r\n  let currentUser = getState().users.users[idUser];\r\n  let userComments = currentUser.comments.find((item) => item.id === idComment);\r\n  if (userComments && userComments.commentsIdArr) {\r\n    userComments.commentsIdArr.forEach((item) => {\r\n      promisCommetns.push(JsonComent([item]).then((res) => {\r\n        commetns.push(res)\r\n      }))\r\n    })\r\n  }\r\n  Promise.all(promisCommetns).then(res => {\r\n    dispatch(addUserComentsOpen(idUser,idComment,commetns));\r\n  })\r\n}\r\n// <- no thunk \r\nasync function addCommentsOrStoryUser (type: 'story'|'comments',id:string,whatUpNum = 25, dispatch: any, getState: any) {\r\n    dispatch(startLoad(id));\r\n    let user = getState().users.users[id];\r\n    let cunt = user.cunt;\r\n    let StoryItems: IStore[] = [];\r\n    let CommentsItems: any[] = [];\r\n    let stop = false;\r\n    while (((type === 'story') ? StoryItems.length : CommentsItems.length) < whatUpNum || stop) {\r\n      if (user.submitted) {\r\n        let maxCunt = cunt + (whatUpNum-1);\r\n        if (maxCunt > user.submitted.length) {\r\n          maxCunt = user.submitted.length - 1;\r\n          stop = true;\r\n          let items = await getItems(user.submitted.slice(cunt,cunt+(whatUpNum-1)));\r\n          StoryItems = [...StoryItems,...items.story];\r\n          CommentsItems = [...CommentsItems,...items.comments];\r\n          dispatch(maxItem(id));\r\n          break\r\n        }\r\n        let items = await getItems(user.submitted.slice(cunt,cunt+(whatUpNum-1)));\r\n        StoryItems = [...StoryItems,...items.story];\r\n        CommentsItems = [...CommentsItems,...items.comments];\r\n        cunt+=whatUpNum;\r\n      } else {\r\n        stop = true;\r\n        return [];\r\n      }\r\n    }\r\n    dispatch(addUserStory(id,StoryItems));\r\n    dispatch(addUserCommets(id,CommentsItems))\r\n    dispatch(upCout(id,cunt));\r\n    dispatch(stopLoad(id));\r\n    return StoryItems\r\n}\r\n// <- no thunk \r\nexport const addUserCommentsThunk = (id: string, whatUpNum = 25): IuserReducersThunk<Promise<IStore[]>> => async (dispatch: any,\r\n  getState: () => IStore): Promise<IStore[]> => {\r\n  console.log('запусk',id)\r\n  return addCommentsOrStoryUser('comments',id,whatUpNum,dispatch,getState);\r\n}\r\nexport const addUserStoryThunk = (id: string, whatUpNum = 25) => async (dispatch: any,\r\n  getState: () => IStore): Promise<IStore[]> => {\r\n  return addCommentsOrStoryUser('story',id,whatUpNum,dispatch,getState);\r\n}\r\nexport const addUserThunk = (id:string) => async (dispatch:any) => {\r\n  let userInfo:IUser = await getElementByUserId(id);\r\n  dispatch(addUser(userInfo));\r\n}\r\n\r\nconst start:IuserReducers = {\r\n  users: {}\r\n}\r\n\r\nfunction userReducers (state=start,action:IuserActions):IuserReducers {\r\n  switch (action.type) {\r\n    case ADD_USER_COMMETNS_OPEN: {\r\n      let user = {...state.users[action.id]};\r\n      let comments: any = {};\r\n      for (let t=0; t<action.info.length; t++) {\r\n        comments = {...comments,...action.info[t]};\r\n        console.log(action.info,t,action.info[t],comments,'1234')\r\n      }\r\n      let com = user.comments.map(item => {\r\n        if (item.id === action.idComments) {\r\n          let t = {...item, comments: comments}\r\n          return t\r\n        }\r\n        return item\r\n      })\r\n      user.comments = com;\r\n      return {\r\n        ...state,\r\n        users: {\r\n          ...state.users,\r\n          [action.id]:user,\r\n        }\r\n      }\r\n    }\r\n    case ADD_USER_COMMETNS: {\r\n      let currentUser = state.users[action.id];\r\n      if (currentUser) {\r\n        return {\r\n          ...state,\r\n          users: {...state.users,\r\n            [action.id]: {\r\n              ...currentUser,\r\n              comments: [...currentUser.comments,...action.info]\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        return state\r\n      }\r\n    }\r\n    case MAX_ITEMS: {\r\n      return {\r\n        ...state,\r\n        users: {...state.users,\r\n          [action.id]:{\r\n            ...state.users[action.id],\r\n            maxItems: true,\r\n          }\r\n        }\r\n      }\r\n    }\r\n    case STOP_LOAD: {\r\n      return {\r\n        ...state,\r\n        users: {...state.users,\r\n          [action.id]:{\r\n            ...state.users[action.id],\r\n            isLoad:false\r\n          }\r\n        }\r\n      }\r\n    }\r\n    case START_LOAD: {\r\n      return {\r\n        ...state,\r\n        users: {...state.users,\r\n          [action.id]:{\r\n            ...state.users[action.id],\r\n            isLoad:true,\r\n          }\r\n        }\r\n      }\r\n    }\r\n    case UP_COUT: {\r\n      return {\r\n        ...state,\r\n        users: {...state.users,\r\n          [action.id]:{\r\n            ...state.users[action.id],\r\n            cunt:state.users[action.id].cunt + action.cout,\r\n          }}\r\n      }\r\n    }\r\n    case ADD_USER: {\r\n      return {\r\n        ...state,\r\n        users:{...state.users,[action.info.id]:{\r\n          id:action.info.id,\r\n          created:action.info.created,\r\n          karma:action.info.karma,\r\n          about:action.info.about,\r\n          submitted:action.info.submitted,\r\n          story: [],\r\n          comments: [],\r\n          favorites: [],\r\n          cunt: 0,\r\n          isLoad: false,\r\n          maxItems: false,\r\n        }}\r\n      }\r\n    }\r\n    case ADD_USER_STORY: {\r\n      let story: any[] = [];\r\n      let user = state.users[action.id];\r\n      if (user.story) {\r\n        story = [...user.story,...action.storys];\r\n      } else {\r\n        story = [...action.storys];\r\n      }\r\n      return {\r\n        ...state,\r\n        users:{...state.users,\r\n          [action.id]: {\r\n            ...state.users[action.id],\r\n            story: story,\r\n          }\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default userReducers","import React from 'react'\r\nimport { IUser } from '../../redux/user-reducersType'\r\nimport styles from './UserPage.module.css'\r\nimport { Link } from 'react-router-dom';\r\nimport {ObjOfUnDateToString} from '../../helpers/function';\r\n\r\n\r\ninterface Iprops {\r\n  user:IUser,\r\n  path: string,\r\n}\r\n\r\nexport default function UserPage(props:Iprops) {\r\n  let date = ObjOfUnDateToString(props.user.created);\r\n  return (\r\n    <div className={styles.User}>\r\n      <div className={styles.line}><div className={styles.blockOne}>Name : </div>{props.user.id}</div>\r\n      <div className={styles.line}><div className={styles.blockOne}>Created : </div>{date}</div>\r\n      <div className={styles.line}><div className={styles.blockOne}>karma : </div>{props.user.karma}</div>\r\n      <div className={styles.line}><div className={styles.blockOne}>about : </div>\r\n        <div className={styles.aboutWrap}>\r\n          <div className={styles.about} dangerouslySetInnerHTML={{__html: (props.user) ? \r\n            (props.user.about) ? props.user.about : ''\r\n            : ''}}>\r\n          </div>\r\n          <div className={styles.Links}>\r\n            <Link to={`${props.path}/submission`}>submission \r\n              <span style={{color: 'grey',fontSize: 12}}>*|will take a long time to load</span>\r\n            </Link>\r\n            <Link to={`${props.path}/comments`}>comments\r\n              <span style={{color: 'grey',fontSize: 12}}>*|will take a long time to load</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport IStore from '../../redux/storeType';\r\nimport { withRouter, match, RouteComponentProps } from 'react-router-dom';\r\nimport { addUserThunk, addUserStoryThunk } from './../../redux/user-reducers';\r\nimport { IUser } from '../../redux/user-reducersType';\r\nimport Load from '../decorComponent/load';\r\nimport UserPage from './UserPage';\r\n\r\ninterface Iprops extends RouteComponentProps<any> {\r\n  match:match<{userId:string}>;\r\n  users:{[key: string]: IUser};\r\n  addUserThunk: (id:string) => Promise<void>;\r\n  addUserStoryThunk: (id: string) => Promise<any>;\r\n}\r\n\r\nconst UserPageContainer:React.FC<Iprops> = (props) => {\r\n  const [requersStatis, setrequersStatis] = useState(false);\r\n  let currentUser: IUser | void;\r\n  if(!props.users[props.match.params.userId]) {\r\n    if (!requersStatis) {  \r\n      props.addUserThunk(props.match.params.userId);\r\n      setrequersStatis(true);\r\n    }\r\n  } else {\r\n    currentUser = props.users[props.match.params.userId];\r\n  }\r\n  if (currentUser) {\r\n    return (\r\n      <UserPage user={currentUser} path={props.match.url}/>\r\n    )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Load/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  (state:IStore) => {\r\n    return {\r\n      users:state.users.users\r\n    }\r\n  }, {\r\n    addUserThunk,\r\n    addUserStoryThunk,\r\n  }\r\n)(withRouter(UserPageContainer));","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport IStore from '../../redux/storeType';\r\nimport { withRouter,match, RouteComponentProps } from 'react-router-dom';\r\nimport { IUser } from '../../redux/user-reducersType';\r\nimport Load from './../decorComponent/load';\r\nimport { addUserThunk , addUserStoryThunk} from './../../redux/user-reducers';\r\nimport StorysList from '../StoryPage/StorysList';\r\n\r\ninterface Iprops extends RouteComponentProps<any> {\r\n  match:match<{userId:string}>;\r\n  users:{[key: string]: IUser};\r\n  addUserStoryThunk: (id: string) => void;\r\n  addUserThunk: (id: string) => Promise<any>;\r\n}\r\n\r\nconst UserPageSubContainer:React.FC<Iprops> = (props: Iprops) => {\r\n  useEffect(() => {\r\n    debugger\r\n    props.addUserThunk(props.match.params.userId).then(res => {\r\n      props.addUserStoryThunk(props.match.params.userId);\r\n    })\r\n  },[])\r\n  let currentUser = props.users[props.match.params.userId];\r\n  if (currentUser) {\r\n    if (currentUser.story && currentUser.story.length >= 1) {\r\n      return (\r\n        <StorysList \r\n          storysIsLoad={currentUser.isLoad}\r\n          storys={currentUser.story}\r\n          funcAdd={() => {\r\n            props.addUserStoryThunk(props.match.params.userId)\r\n          }}\r\n          lenIsMax={currentUser.maxItems}\r\n          />\r\n      )\r\n    }\r\n    if (!currentUser.story && currentUser.maxItems) {\r\n      return (\r\n        <div>\r\n          no story\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Load/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (store: IStore) => {\r\n    return {\r\n      users: store.users.users\r\n    }\r\n  }, {\r\n    addUserThunk,\r\n    addUserStoryThunk,\r\n  }\r\n)(withRouter(UserPageSubContainer));","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport IStore from '../../redux/storeType';\r\nimport { RouteComponentProps, match, withRouter } from 'react-router-dom';\r\nimport { IUser } from '../../redux/user-reducersType';\r\nimport { addUserThunk, addUserCommentsThunk } from '../../redux/user-reducers';\r\nimport { BlockComment } from '../CommentsBlock/CommentsBlock';\r\nimport Load from './../decorComponent/load';\r\nimport { addUserComentsOpenThunk } from './../../redux/user-reducers';\r\nimport styles from './UserPage.module.css';\r\n\r\ninterface Iprops extends RouteComponentProps<any> {\r\n  match: match<{userId:string}>;\r\n  users:{[key: string]: IUser};\r\n  addUserThunk: (id:string) => Promise<any>;\r\n  addUserCommentsThunk: (id:string) => Promise<any>;\r\n  addUserComentsOpenThunk: (idUser: string, idComment: number) => any\r\n}\r\n\r\nfunction UserPageCommetns(props: Iprops) {\r\n  useEffect(() => {\r\n    props.addUserThunk(props.match.params.userId).then(res => {\r\n      console.log(props.match.params.userId, 'я запустилась')\r\n      props.addUserCommentsThunk(props.match.params.userId);\r\n    });\r\n  },[props.match.params.userId])\r\n  let currentUser = props.users[props.match.params.userId];\r\n  if (currentUser && currentUser.comments.length>0) {\r\n    let commetns = currentUser.comments.map((item:any) => <BlockComment key={item.id}\r\n      id={item.id}\r\n      name={item.name}\r\n      text={item.text}\r\n      commetnsArr={item.commentsIdArr}\r\n      funcBtn={() => {\r\n        console.log(currentUser.id,'currentUser')\r\n        props.addUserComentsOpenThunk(currentUser.id,item.id)\r\n      }}\r\n      comments={item.comments}\r\n    />)\r\n    return (\r\n      <div className={styles.content}>\r\n        {commetns}\r\n      </div>\r\n    )\r\n  }\r\n  if (currentUser && currentUser.maxItems) {\r\n    return (\r\n      <div>\r\n        no comments\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <Load/>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(connect(\r\n  (state:IStore) => {\r\n    return {\r\n      users: state.users.users,\r\n    }\r\n  },{\r\n    addUserThunk,\r\n    addUserCommentsThunk,\r\n    addUserComentsOpenThunk,\r\n  }\r\n)(withRouter(React.memo(UserPageCommetns))))","\r\nexport const ADD_JOBS = 'ADD_JOBS' \r\nexport const UP_INDEX = 'UP_INDEX'\r\nexport const IS_LOAD_JOBS = 25;\r\nexport const SET_INDEX_ARR = 'SET_INDEX_ARR';\r\nexport const START_LOAD = 'START_LOAD';\r\nexport const STOP_LOAD = 'STOP_LOAD';\r\nexport const MAX_LOAD_LIST = 'MAX_LOAD_LIST';\r\n\r\nexport interface ImaxLoadList {\r\n  type: typeof MAX_LOAD_LIST\r\n}\r\nexport interface IstartLoad {\r\n  type: typeof START_LOAD\r\n}\r\nexport interface IstopLoad {\r\n  type: typeof STOP_LOAD\r\n}\r\nexport interface IsetIndexArr {\r\n  type: typeof SET_INDEX_ARR\r\n  arr: number[]\r\n}\r\nexport interface IupIndex {\r\n  type: typeof UP_INDEX,\r\n  upIndexNum: number\r\n}\r\nexport interface IaddJobs {\r\n  type: typeof ADD_JOBS,\r\n  jobs: Ijob[]\r\n}\r\n\r\nexport interface Ijob {\r\n  by: string,\r\n  id: number,\r\n  score: number,\r\n  time: number,\r\n  title: string,\r\n  url: string,\r\n  type?: 'job',\r\n}\r\nexport type IJobsActions = ImaxLoadList|IstartLoad|\r\n                           IstopLoad|IsetIndexArr|\r\n                           IupIndex|IaddJobs\r\nexport default interface IjobsReduser {\r\n  jobs: Ijob[]\r\n  loadJobsNum: number,\r\n  jobsIndexArr: number[],\r\n  isLoad: boolean,\r\n  isMax: boolean,\r\n}","import IjobsReduser, { Ijob, IJobsActions,\r\n                       MAX_LOAD_LIST,START_LOAD,\r\n                       STOP_LOAD,SET_INDEX_ARR,\r\n                       UP_INDEX,ADD_JOBS,\r\n                       IS_LOAD_JOBS,\r\n                       ImaxLoadList,\r\n                       IstartLoad,\r\n                       IstopLoad,\r\n                       IsetIndexArr,\r\n                       IupIndex,\r\n                       IaddJobs,\r\n} from \"./jobs-reducersType\";\r\nimport { getTopJobs } from \"../api/api\";\r\nimport IStore, { ImyCastomThunk } from \"./storeType\";\r\nimport {getItemsArrayLoad} from '../helpers/function';\r\n\r\nexport type IjobsReducerThunk<R> = ImyCastomThunk<R,IJobsActions>\r\n\r\nconst maxLoadList = ():ImaxLoadList => {\r\n  return {\r\n    type: MAX_LOAD_LIST\r\n  }\r\n}\r\nconst startLoad = ():IstartLoad => {\r\n  return {\r\n    type: START_LOAD\r\n  }\r\n}\r\n\r\nconst stopLoad = ():IstopLoad => {\r\n  return {\r\n    type: STOP_LOAD\r\n  }\r\n}\r\nconst setIndexArr = (arr: number[]):IsetIndexArr => {\r\n  return {\r\n    type:SET_INDEX_ARR,\r\n    arr,\r\n  }\r\n}\r\nconst upIndex = (upIndexNum: number):IupIndex => {\r\n  return {\r\n    type: UP_INDEX,\r\n    upIndexNum,\r\n  }\r\n}\r\nexport const addJobs = (jobs: Ijob[]):IaddJobs => {\r\n  return {\r\n    type: ADD_JOBS,\r\n    jobs,\r\n  }\r\n}\r\nexport const addJobsThunk = (): IjobsReducerThunk<Promise<void>> => async (dispatch: any, getStory: () => IStore) => {\r\n  const stor = getStory();\r\n  let indexArr = stor.jobs.jobsIndexArr;\r\n  if (!indexArr.length) {\r\n    indexArr = await getTopJobs();\r\n    dispatch(setIndexArr(indexArr));\r\n  }\r\n  let currentLoad = stor.jobs.loadJobsNum;\r\n  if (currentLoad >= indexArr.length) {\r\n    return\r\n  }\r\n  dispatch(startLoad());\r\n  if (currentLoad + IS_LOAD_JOBS > indexArr.length && currentLoad < indexArr.length) {\r\n    let jobs = await getItemsArrayLoad(indexArr.slice(currentLoad, indexArr.length))\r\n    dispatch(addJobs(jobs));\r\n    dispatch(upIndex(jobs.length));\r\n    dispatch(maxLoadList());\r\n    dispatch(stopLoad());\r\n    return\r\n  }\r\n  let jobs = await getItemsArrayLoad(indexArr.slice(currentLoad, currentLoad+IS_LOAD_JOBS));\r\n  dispatch(addJobs(jobs));\r\n  dispatch(upIndex(jobs.length));\r\n  dispatch(stopLoad());\r\n}\r\n\r\nlet start: IjobsReduser = {\r\n  jobs: [],\r\n  loadJobsNum: 0,\r\n  jobsIndexArr: [],\r\n  isLoad: false,\r\n  isMax: false,\r\n}\r\nfunction jobsReducer (state=start,action:IJobsActions):IjobsReduser{\r\n  switch (action.type) {\r\n    case MAX_LOAD_LIST: {\r\n      return {\r\n        ...state,\r\n        isMax: true,\r\n      }\r\n    }\r\n    case STOP_LOAD: {\r\n      return {\r\n        ...state,\r\n        isLoad: false,\r\n      }\r\n    }\r\n    case START_LOAD: {\r\n      return {\r\n        ...state,\r\n        isLoad: true,\r\n      }\r\n    }\r\n    case SET_INDEX_ARR: {\r\n      return {\r\n        ...state,\r\n        jobsIndexArr: action.arr \r\n      }\r\n    }\r\n    case UP_INDEX: {\r\n      return {\r\n      \t...state,\r\n\t      loadJobsNum: state.loadJobsNum + action.upIndexNum\r\n      }\r\n    }\r\n    case ADD_JOBS: {\r\n      return {\r\n        ...state,\r\n        jobs: [...state.jobs,...action.jobs]\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default jobsReducer\r\n","import React from 'react'\nimport {Ijob} from '../../redux/jobs-reducersType'\nimport { egoDateToString } from '../../helpers/function'\nimport { Link } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\ninterface Iprops extends Ijob {}\n\nlet style = makeStyles({\n  linkToJob: {\n    color: 'blue',\n    fontSize: 15,\n    transition: '0.2s',\n    '&:hover': {\n      color: 'rgb(0, 159, 233)'\n    }\n  },\n  egoTime: {\n    fontSize: 13,\n    color: '#828282'\n  }\n})\nexport default function JobsItem(props:Iprops) {\n  let styles = style();\n  return (\n    <div style={{paddingLeft: '15px',paddingRight: '15px'}}>\n      <Link className={styles.linkToJob} href={props.url}>\n        {props.title}\n      </Link>\n      <div className={styles.egoTime}>{egoDateToString(props.time)}</div>\n    </div>\n  )\n}\n","import React,{useRef,useEffect} from 'react'\nimport { Ijob } from '../../redux/jobs-reducersType'\nimport JobsItem from './JobsItem'\nimport styles from './Jobs.module.css'\nimport { Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport MinLoadCenter from '../decorComponent/minLoadCenter'\n\ninterface Iprops {\n  jobs: Ijob[];\n  addFunBtn: () => void;\n  isLoad: boolean;\n  isMax: boolean;\n}\nlet style = makeStyles({\n  btn: {\n    margin: '0 auto',\n    marginTop: '10px',\n    display: 'block',\n    fontWeight: 900\n  }\n})\nexport default function JobsList(props: Iprops) {\n  let styleMater = style();\n  let request = useRef(false);\n  useEffect(() => {\n    request.current=false\n    // auto load\n    const startScroll = (event: any) => {\n      if (document.body.scrollHeight-150 <= \n        document.documentElement.scrollTop \n        + \n        document.documentElement.clientHeight) {\n          if (!request.current) {\n            request.current = true;\n            props.addFunBtn();\n          }\n        }\n    }\n    window.addEventListener('scroll', startScroll);\n    return () => {\n      window.removeEventListener('scroll',startScroll);\n    }\n  },[props.jobs.length]);\n  let jobsItems = props.jobs.map(item => <JobsItem key={item.id} {...item}/>)\n  return (\n    <div className={styles.List}>\n      {jobsItems}\n      {(!props.isLoad && !props.isMax) ? \n        <Button onClick={props.addFunBtn} className={styleMater.btn} variant=\"contained\" color=\"secondary\">\n          add jobs\n        </Button> : (!props.isMax) ? <MinLoadCenter/> : ''\n        }\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport IStore from '../../redux/storeType';\r\nimport {addJobsThunk} from '../../redux/jobs-reducers';\r\nimport JobsList from './JobsList';\r\nimport { Ijob } from '../../redux/jobs-reducersType';\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\ninterface Iprops {\r\n  addJobsThunk: () => void;\r\n  jobs: Ijob[];\r\n  isLoad: boolean;\r\n  isMax: boolean;\r\n}\r\nfunction JobsContainer(props: Iprops) {\r\n  useEffect(() => {\r\n    if (!props.jobs.length) {\r\n      props.addJobsThunk();\r\n    }\r\n  },[props.jobs.length])\r\n  if (!props.jobs.length) {\r\n    return (\r\n      <LinearProgress value={100}/>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <JobsList jobs={props.jobs} \r\n                addFunBtn={props.addJobsThunk} \r\n                isLoad={props.isLoad}\r\n                isMax={props.isMax}\r\n                />\r\n    </div>\r\n  )\r\n}\r\nexport default connect(\r\n  (store:IStore) => {\r\n    return {\r\n      jobs:store.jobs.jobs,\r\n      isLoad: store.jobs.isLoad,\r\n      isMax: store.jobs.isMax,\r\n    }\r\n  }, {\r\n    addJobsThunk,\r\n  }\r\n)(JobsContainer);","import {Ijob} from './jobs-reducersType';\nimport {IStore,ICommetn} from './user-reducersType';\nimport { Istory } from './storys-reducersType';\n\nexport const SET_ITEM = 'SET_ITEM';\nexport const START_LOAD = 'START_LOAD';\nexport const STOP_LOAD = 'STOP_LOAD';\nexport const START_TIMER = 'START_TIMER';\nexport const STOP_TIMER = 'STOP_TIMER';\nexport const SET_MAX_ITEM = 'SET_MAX_ITEM';\nexport const REQUERS_IN_ITEM_START = 'REQUERS_IN_ITEM_START';\nexport const REQUERS_IN_ITEM_STOP = 'REQUERS_IN_ITEM_STOP';\nexport const SET_COMMENT_IN_ITEM = 'SET_COMMENT_IN_ITEM';\nexport const RESET_ITEM = 'RESET_ITEM';\nexport const STOP_CHECK_MAX_ITEM = 'STOP_CHECK_MAX_ITEM';\nexport const ADD_COMMENT_TO_STORY = 'ADD_COMMENT_TO_STORY';\n\nexport type Iitem = Ijob|IStore|ICommetn|IUserLopped;\n\nexport interface IaddCommentToStory {\n    type: typeof ADD_COMMENT_TO_STORY,\n    comments: any\n}\nexport interface IsetCommentInItem {\n    type: typeof SET_COMMENT_IN_ITEM\n    comment: ICommetn[]\n}\nexport interface IresetItem {\n    type: typeof RESET_ITEM\n}\nexport interface IrequesInItemStart {\n    type: typeof REQUERS_IN_ITEM_START\n}\nexport interface IrequesInItemStop {\n    type: typeof REQUERS_IN_ITEM_STOP\n}\nexport interface IsetMaxItem {\n    type: typeof SET_MAX_ITEM\n    index: number\n}\nexport interface IstopTimer {\n    type: typeof STOP_TIMER\n}\nexport interface IstartTime {\n    type: typeof START_TIMER\n    timer: NodeJS.Timeout\n}\nexport interface IstatLoad {\n    type: typeof START_LOAD\n}\nexport interface IstopLoad {\n    type: typeof STOP_LOAD\n}\nexport interface IsetItem {\n    type: typeof SET_ITEM\n    item: Iitem\n}\nexport interface IstopCheckMaxItem {\n    type: typeof STOP_CHECK_MAX_ITEM\n}\nexport interface IsetItem {\n    type: typeof SET_ITEM,\n    item: Iitem,\n}\n\nexport type IUserLopped = {\n    id?: string,\n    created?: number,\n    type: 'user',\n    errorCode: number,\n    ErrorMessage?: string,\n    karma: number,\n}\n\nexport type IgetByIdActions = IaddCommentToStory|IsetCommentInItem|\n                              IresetItem|IresetItem|\n                              IrequesInItemStart|IrequesInItemStop|\n                              IsetMaxItem|IstopTimer|\n                              IstatLoad|IstopLoad|\n                              IsetItem| IstopCheckMaxItem|\n                              IstartTime\n\nexport default interface IgetByIdReducers {\n    item?:Ijob|Istory|ICommetn|IUserLopped,\n    isLoad: boolean,\n    timer?: NodeJS.Timeout | null,\n    maxItem?: number,\n    isLoadInItem: boolean,\n}\n","import IgetByIdReducersState, { \n    Iitem, \n    IgetByIdActions, \n    ADD_COMMENT_TO_STORY,\n    SET_COMMENT_IN_ITEM,\n    SET_ITEM,\n    RESET_ITEM,\n    REQUERS_IN_ITEM_START,\n    REQUERS_IN_ITEM_STOP,\n    SET_MAX_ITEM,\n    STOP_TIMER,\n    START_TIMER,\n    START_LOAD,\n    STOP_LOAD,\n    STOP_CHECK_MAX_ITEM,\n    IsetCommentInItem,\n    IsetItem,\n    IresetItem,\n    IrequesInItemStart,\n    IrequesInItemStop,\n    IsetMaxItem,\n    IstopTimer,\n    IstartTime,\n    IstatLoad,\n    IstopCheckMaxItem,\n    IaddCommentToStory,\n} from './getByid-reducersType';\nimport { getElementById, maxItems, getElementByUserId } from '../api/api';\nimport { JsonComent } from '../helpers/function';\nimport { ICommetn } from './user-reducersType';\nimport IStore, { ImyCastomThunk } from './storeType';\nimport { IstopLoad } from './jobs-reducersType';\n\nexport type IgetByIdReducersThunk<R> = ImyCastomThunk<R,IgetByIdActions> \n\n// set comment in item (item - story)\nexport const addCommentToStory = (comments: ICommetn):IaddCommentToStory => {\n    return {\n        type: ADD_COMMENT_TO_STORY,\n        comments,\n    }\n} \n// set comment in item (item - comment)\nconst setCommentInItem = (comment: ICommetn[]):IsetCommentInItem => {\n    return {\n        type: SET_COMMENT_IN_ITEM,\n        comment,\n    }\n}\nexport const resetItem = ():IresetItem => {\n    return {\n        type: RESET_ITEM\n    }\n}\nconst requesInItemStart = ():IrequesInItemStart => {\n    return {\n        type: REQUERS_IN_ITEM_START\n    }\n}\nconst requesInItemStop = ():IrequesInItemStop => {\n    return {\n        type: REQUERS_IN_ITEM_STOP\n    }\n}\nexport const setMaxItem = (index: number): IsetMaxItem => {\n    return {\n        type: SET_MAX_ITEM,\n        index,\n    }\n}\nexport const stopTimer = (): IstopTimer => {\n    return {\n        type: STOP_TIMER\n    }\n}\nexport const startTimer = (timer: NodeJS.Timeout): IstartTime => {\n    return {\n        type: START_TIMER,\n        timer,\n    }\n}\nexport const statLoad = (): IstatLoad => {\n    return {\n        type: START_LOAD\n    }\n\n}\nexport const stopLoad = (): IstopLoad => {\n    return {\n        type: STOP_LOAD\n    }\n}\nexport const stopCheckMaxItem = (): IstopCheckMaxItem => {\n    return {\n        type: STOP_CHECK_MAX_ITEM\n    }\n}\n\nexport const setItem = (item: Iitem): IsetItem => {\n    return {\n        type: SET_ITEM,\n        item,\n    }\n}\n\nexport const addCommentToStoryItemThunk = (): IgetByIdReducersThunk<void> => (dispatch, getState: () => IStore) => {\n    let item = getState().getByItem.item;\n    if (item && item.type === 'story') {\n        dispatch(requesInItemStart());\n        let promiss:Promise<any>[] = [];\n        let kids = item.commentsId;\n        kids.forEach((id) => {\n            promiss.push(JsonComent([id]).then((comments: ICommetn) => {\n                dispatch(addCommentToStory(comments))\n            }))\n        })\n        Promise.all(promiss).then(()=> {\n            dispatch(requesInItemStop());\n        })\n    }\n}\n// item -> comment\nexport const setCommentInItemThunk = (id:number) => async (dispatch: any) => {\n    dispatch(requesInItemStart());\n    // func JsonComment res comments[id] > comments [id] -> comment,comment,comment\n    let comments = await JsonComent([id]);\n    comments = comments[id].comments;\n    dispatch(setCommentInItem(comments));\n    dispatch(requesInItemStop());\n}\nexport const CheckMaxItemThunk = () => async (dispatch: any) => {\n    let maxNum = await maxItems();\n    dispatch(setMaxItem(maxNum));\n}\nexport const startCheckMaxItem = () => (dispatch: any) => {\n    dispatch(startTimer(setInterval(() => {\n        dispatch(CheckMaxItemThunk());\n    },10000)))\n}\nexport const setItemThunkStart = (id: number|string) => async (dispatch: any): Promise<Iitem> => {\n    dispatch(statLoad());\n    let item:any;\n    if(typeof id === 'string') {\n        item = await getElementByUserId(id);\n        if (item) {\n            item.type = 'user';\n            item.errorCode = 0;\n        } else {\n            debugger\n            item = {};\n            item.errorCode = 1;\n            item.ErrorMessage = 'not search';\n            item.type = 'user';\n        }\n    } else {\n        item = await getElementById(id);\n    }\n    if(item.type === 'comment') {\n        item.name = item.by;\n        item.isLoad = false;\n        delete item.by\n    }\n    if (item.type === 'story') {\n        item = {\n            id: item.id,\n            url: item.url,\n            fullLenComments:(item.descendants === -1) ? null : item.descendants,\n            header:item.title,\n            author:item.by,\n            score:item.score,\n            time:item.time,\n            comments:[],\n            commentsId: ( typeof (item.kids) === 'object') ? [...item.kids] : [],\n            type: 'story',\n        }\n    }\n    return item;\n}\nexport const setItemThunkEnd = (item: any) => async (dispatch: any) => {\n    dispatch(setItem(item));\n    dispatch(stopLoad());\n}\n\nlet initState: IgetByIdReducersState = {\n    isLoad:false,\n    isLoadInItem: false,\n};\n\nexport default function getByIdReducers (state = initState,action: IgetByIdActions):IgetByIdReducersState {\n    switch (action.type) {\n        case ADD_COMMENT_TO_STORY: {\n            let item = state.item;\n            if (item && item.type === 'story') {\n                item = {...item};\n                let comments = [];\n                for (let key in action.comments) {\n                    comments.push(action.comments[key])\n                }\n                item.comments = [...item.comments,...comments];\n            }\n            return {\n                ...state,\n                item: item\n            }\n        }\n        case STOP_CHECK_MAX_ITEM: {\n            return {\n                ...state,\n            }\n        }\n        case SET_COMMENT_IN_ITEM: {\n            let item\n            if (state.item && state.item.type === 'comment') {\n                item = {...state.item};\n                item.comments = action.comment;\n            }\n            return {\n                ...state,\n                item,\n            }\n        }\n        case REQUERS_IN_ITEM_STOP: {\n            return {\n                ...state,\n                isLoadInItem: false\n            }\n        }\n        case REQUERS_IN_ITEM_START: {\n            return {\n                ...state,\n                isLoadInItem: true\n            }\n        } \n        case SET_MAX_ITEM: {\n            // that no reload if max Item Index = check index\n            if (state.maxItem === action.index) {\n                return state\n            }\n            return {\n                ...state,\n                maxItem: action.index,\n            }\n        }\n        case STOP_TIMER: {\n            if (state.timer) {\n                clearInterval(state.timer);\n            }\n            return {\n                ...state,\n                timer: null,\n            }\n        }\n        case START_TIMER: {\n            return {\n                ...state,\n                timer: action.timer,\n            }\n        }\n        case START_LOAD: {\n            return {\n                ...state,\n                isLoad: true\n            }\n        }\n        case STOP_LOAD: {\n            return {\n                ...state,\n                isLoad: false\n            }\n        }\n        case SET_ITEM: {\n            return {\n                ...state,\n                item: action.item\n            }\n        }\n        case RESET_ITEM: {\n            return {\n                ...state,\n                item: undefined,\n                isLoad: false,\n            }\n        }\n        default: return state;\n    }\n}","import React, { useState, useEffect } from 'react'\nimport styles from './TableItem.module.css';\n\ninterface Iprops {\n    number: string;\n}\n\nexport default function TableItem(props:Iprops) {\n    let [t,setT] = useState(props.number);\n    useEffect(() => {\n        setT((r) => {\n            if (props.number < r) {\n                \n            }\n            return props.number\n        })\n    },[props.number])\n    return (\n        <div className={styles.window}>\n            <div className={styles.col + ' ' + styles[(false) ? `topUp${t}` : `top${t}`]}>\n                <span>0</span>\n                <span>1</span>\n                <span>2</span>\n                <span>3</span>\n                <span>4</span>\n                <span>5</span>\n                <span>6</span>\n                <span>7</span>\n                <span>8</span>\n                <span>9</span>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport TableItem from './TableItem'\n\ninterface Iprops {\n    number: number;\n}\n\nexport default function TableItemsNumber(props:Iprops) {\n    let numbers = (''+props.number).match(/\\w/g);\n    let nums = [];\n    if (numbers && numbers.length) {\n        for (let t=0; t<numbers.length; t++) {\n            nums.push(<TableItem number={numbers[t]} key={t}/>);\n        }\n    }\n    return (\n        <div style={{display:'flex'}}>\n            {nums}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport styles from './GetByIdPage.module.css';\nimport { Switch, Typography, Grid } from '@material-ui/core';\n\ninterface Iprops {\n    maxItem: number;\n    setItemThunkStart: (id: number|string) => any;\n    setItemThunkEnd: (item: any) => void;\n    resetItem: () => void;\n}\n\nexport default function GetByIdFieldInput(props:Iprops) {\n    let [searchToUser,setSearchToUser] = useState(false);\n    let [text,setText] = useState('');\n    let [error, setError] = useState(false);\n    let id: any = React.useRef();\n    return (\n        <div>\n            <input className={styles.input} ref={id} type=\"text\" value={text} onChange={\n                (event) => {\n                        if (!searchToUser) {\n                            if (+event.target.value <= props.maxItem) {\n                            setText(event.target.value);\n                            if (error) {\n                                setError(false);\n                            }\n                        } else if (event.target.value.match(/\\D/) === null) {\n                            setError(true);\n                        }\n                        if (+event.target.value && +event.target.value <= props.maxItem) {\n                            // fix state race\n                            props.setItemThunkStart(+event.target.value).then((item: any) => {\n                                if(item.id === +id.current.value) {\n                                    props.setItemThunkEnd(item);\n                                }\n                            });\n                            \n                        }\n                        if (!(+id.current.value) && event.target.value.match(/\\D/) === null) {\n                            props.resetItem();\n                        }\n                    } else {\n                        setText(event.target.value);\n                        if (event.target.value.length > 0) {\n                            props.setItemThunkStart(event.target.value).then((item: any) => {\n                            if(item.id === id.current.value || item.errorCode) {\n                                props.setItemThunkEnd(item);\n                            }\n                            });\n                        }\n                    }\n                }}/>\n                {(error) && <div style={{color: 'red'}}>max items is {props.maxItem}</div>}\n                <div>\n                <div style={{textAlign: 'center'}}>\n                    search to\n                </div>\n                <Typography component=\"div\">\n                    <Grid component=\"label\" container alignItems=\"center\" justify=\"center\" spacing={1}>\n                    <Grid item> id</Grid>\n                    <Grid item>\n                        <Switch\n                        checked={searchToUser}\n                        onChange={() => {setSearchToUser(r => !r);\n                                         setText('');\n                                         id.current.focus();\n                                         props.resetItem();\n                        }}\n                        color=\"primary\"\n                        />\n                    </Grid>\n                    <Grid item>user</Grid>\n                    </Grid>\n                </Typography>\n                </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { IUserLopped } from '../../redux/getByid-reducersType'\nimport { egoDateToString } from '../../helpers/function'\nimport styles from './UserPage.module.css';\nimport { Link } from 'react-router-dom';\n\nexport default function UserSmol(props:IUserLopped) {\n  return (\n    <div className={styles.userSmol}>\n      <div>\n        name: <Link className={styles.link} to={`/user/${props.id}`}>{props.id}</Link>\n      </div>\n      <div>\n        created: {egoDateToString(props.created)}\n      </div>\n      <div>\n        karma: {props.karma}\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { Iitem } from '../../redux/getByid-reducersType';\nimport { BlockComment } from '../CommentsBlock/CommentsBlock';\nimport StoryItem from '../StoryPage/StoryIrem';\nimport UserSmol from '../userPage/UserSmol';\n\ninterface Iprops {\n    item?: Iitem;\n    isLoadInItem: boolean;\n    setCommentInItemThunk: (id:number) => void;\n    addCommentToStoryItemThunk: () => void;\n}\n\nexport default function GetByIdPageItem(props:Iprops) {\n    let item = props.item;\n    let DOMitem;\n    if (item && item.type === 'story') {\n        DOMitem = <StoryItem\n            id={item.id}\n            url={item.url}\n            fullLenComments={item.fullLenComments}\n            header={item.header}\n            author={item.author}\n            score={item.score}\n            time={item.time}\n            comments={item.comments}\n            commentsIsLoad={props.isLoadInItem}\n            addCommentToStoryThunk={props.addCommentToStoryItemThunk}\n            commentsDefOpen={false}\n            commentsId={[]}//!!***\n            isLink={true}\n        />\n    }\n    if (item && item.type && item.type === 'comment') {\n        console.log()\n        DOMitem = <BlockComment\n            id={item.id}\n            name={item.name}\n            text={item.text}\n            commetnsArr={item.kids}\n            comments={item.comments}\n            isLoad={props.isLoadInItem}\n            funcBtn={() => {props.setCommentInItemThunk((item && typeof(item.id) === 'number') ? \n                item.id : -1)}}\n        />\n    }\n    if (item && item.type === 'user') {\n        if (item.errorCode) {\n            DOMitem = <div>\n                {item.ErrorMessage}\n            </div>\n\n        } else if (item.id && item.created && item.karma) {\n            DOMitem = <UserSmol {...item} />\n        }\n        \n    }\n    return (\n        <div>\n            {DOMitem}\n        </div>\n    )\n}\n","import {\n    addCommentToStoryItemThunk,\n    stopTimer,\n    startCheckMaxItem,\n    CheckMaxItemThunk,\n    setCommentInItemThunk,\n    setItemThunkStart,\n    setItemThunkEnd,\n    resetItem\n} from '../../redux/getById-reducers'\nimport React,{ useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport  IStore  from '../../redux/storeType'\nimport { Iitem } from '../../redux/getByid-reducersType'\nimport styles from './GetByIdPage.module.css'\nimport MinLoadCenter from '../decorComponent/minLoadCenter'\nimport TableItemsNumber from '../decorComponent/TableItem/TableItemsNumber'\nimport GetByIdFieldInput from './GetByIdFieldInput'\nimport GetByIdPageItem from './GetByIdPageItem'\n\ninterface Iprops {\n    item?: Iitem;\n    isLoad: boolean;\n    setItemThunkStart: (id: number|string) => any;\n    setItemThunkEnd: (item: any) => void;\n    startCheckMaxItem: () => void;\n    CheckMaxItemThunk: () => void;\n    setCommentInItemThunk: (id:number) => void;\n    addCommentToStoryItemThunk: () => void;\n    resetItem: () => void;\n    stopTimer: () => void;\n    isLoadInItem: boolean;\n    maxItem?: number;\n}\n\nfunction GetByIdPageContainer(props: Iprops) {\n    useEffect(() => {\n        props.CheckMaxItemThunk();\n        props.startCheckMaxItem();\n        return () => {\n            props.stopTimer();\n        }\n    }, []);\n    if (!props.maxItem) {\n        return (\n            <div style={{marginTop: 15}}>\n                <MinLoadCenter/>\n            </div>\n        )\n    };\n    return (\n        <div className={styles.centerBlock} style={{marginTop: 10}}>\n            <div className={styles.center}>\n                <div style={{textAlign: 'center'}}>\n                    max id <TableItemsNumber number={props.maxItem}/>\n                </div>\n                <GetByIdFieldInput \n                    maxItem={props.maxItem}\n                    setItemThunkStart={props.setItemThunkStart}\n                    setItemThunkEnd={props.setItemThunkEnd}\n                    resetItem={props.resetItem}\n                />\n                <div className={styles.content}>\n                    {(!props.isLoad) ? \n                    <GetByIdPageItem item={props.item} \n                                     isLoadInItem={props.isLoadInItem}\n                                     setCommentInItemThunk={props.setCommentInItemThunk}\n                                     addCommentToStoryItemThunk={props.addCommentToStoryItemThunk}\n                                     /> :\n                    <MinLoadCenter/>}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default connect(\n    (state:IStore) => {\n        return {\n            item: state.getByItem.item,\n            isLoad: state.getByItem.isLoad,\n            maxItem: state.getByItem.maxItem,\n            isLoadInItem: state.getByItem.isLoadInItem,\n        }\n    }, {\n        setItemThunkStart,\n        setItemThunkEnd,\n        startCheckMaxItem,\n        CheckMaxItemThunk,\n        stopTimer,\n        setCommentInItemThunk,\n        resetItem,\n        addCommentToStoryItemThunk,\n    }\n)(GetByIdPageContainer)","import { Istory } from './storys-reducersType';\n\nexport const SET_INDEX_STORY = 'SET_INDEX_STORY';\nexport const INITIALIZE = 'INITIALIZE';\nexport const ADD_STORYS = 'ADD_STORYS';\nexport const START_LOAD = 'START_LOAD';\nexport const STOP_LOAD = 'STOP_LOAD';\n\nexport interface IstartLoad {\n  type: typeof START_LOAD\n}\nexport interface IstopLoad {\n  type: typeof STOP_LOAD\n}\nexport interface Iinitializ {\n  type: typeof INITIALIZE\n}\nexport interface IaddStorys {\n  type: typeof ADD_STORYS\n  storys: Istory[]\n}\nexport interface IsetIndexStory {\n  type: typeof SET_INDEX_STORY,\n  index: number\n}\n\nexport type InewsStorysActions = IstartLoad|IstopLoad|\n                           Iinitializ|IaddStorys|\n                           IsetIndexStory\n\nexport default interface InewStoryReducers {\n  story: Istory[];\n  isLoad: boolean;\n  currentIndexStory?: number;\n  isInit: boolean;\n}\n","import InewStoryReducers, {\n  START_LOAD,\n  STOP_LOAD,\n  INITIALIZE,\n  ADD_STORYS,\n  SET_INDEX_STORY,\n  InewsStorysActions,\n  IstartLoad,\n  IstopLoad,\n  Iinitializ,\n  IaddStorys,\n  IsetIndexStory\n} from \"./newStorys-reducersType\";\nimport { maxItems } from \"../api/api\";\nimport { getItemsLoadS } from \"../helpers/function\";\nimport { Istory } from \"./storys-reducersType\";\nimport IStore, { ImyCastomThunk } from \"./storeType\";\n\nconst IS_COUNT_LOAD_STORY = 8;\nconst ADD_COUNT_IN_START = 4;\n\nexport type InewsStoryReducerThunk<R> = ImyCastomThunk<R,InewsStorysActions>\n\nconst startLoad = ():IstartLoad => {\n  return {\n    type: START_LOAD\n  }\n}\nconst stopLoad = ():IstopLoad => {\n  return {\n    type: STOP_LOAD\n  }\n}\nconst initialize = ():Iinitializ => {\n  return {\n    type: INITIALIZE\n  }\n};\nconst addStorys = (storys:Istory[]):IaddStorys => {\n  return {\n    type: ADD_STORYS,\n    storys,\n  }\n};\n\nconst setIndexStory = (index: number):IsetIndexStory => {\n  return {\n    type: SET_INDEX_STORY,\n    index,\n  }\n};\nexport const addStoryThunk = (): InewsStoryReducerThunk<Promise<void>> => async (dispatch: any, getState: () => IStore) => {\n  let indexMaxItem = getState().newStorys.currentIndexStory;\n  if (indexMaxItem) {\n    dispatch(startLoad());\n    let info = await getItemsLoadS(indexMaxItem,IS_COUNT_LOAD_STORY);\n    dispatch(addStorys(info.story));\n    dispatch(setIndexStory(info.index));\n    dispatch(stopLoad());\n  }\n}\nexport const initNewStoryPageThunk = (): InewsStoryReducerThunk<Promise<void>> => async (dispatch: any) => {\n  let indexMaxItem = await maxItems();\n  let info = await getItemsLoadS(indexMaxItem,IS_COUNT_LOAD_STORY+ADD_COUNT_IN_START);\n  let storysArr = info.story;\n  indexMaxItem = info.index;\n  dispatch(addStorys(storysArr));\n  dispatch(setIndexStory(indexMaxItem));\n  dispatch(initialize());\n};\n\nlet initState:InewStoryReducers = {\n  story: [],\n  isLoad: false,\n  isInit: false,\n};\n\n\n\nexport default function newStorysReducers (state=initState,action:InewsStorysActions):InewStoryReducers {\n  switch (action.type) {\n    case START_LOAD: {\n      return {\n        ...state,\n        isLoad: true,\n      }\n    }\n    case STOP_LOAD: {\n      return {\n        ...state,\n        isLoad: false,\n      }\n    }\n    case SET_INDEX_STORY: {\n      return {\n        ...state,\n        currentIndexStory: action.index     \n      }\n    }\n    case ADD_STORYS: {\n      return {\n        ...state,\n        story:[...state.story,...action.storys]\n      }\n    }\n    case INITIALIZE: {\n      return {\n        ...state,\n        isInit: true,\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}","import React, { useEffect } from 'react'\nimport IStore from '../../redux/storeType';\nimport { connect } from 'react-redux';\nimport { Istory } from '../../redux/storys-reducersType';\nimport StorysList from '../StoryPage/StorysList';\nimport {initNewStoryPageThunk, addStoryThunk} from '../../redux/newStorys-reducers'\nimport MinLoadCenter from '../decorComponent/minLoadCenter';\n\ninterface Iprops {\n  init: boolean,\n  storys: Istory[],\n  isLoad: boolean,\n  initNewStoryPageThunk: () => void,\n  addStoryThunk: () => void,\n}\n\nfunction NewStorysContainer(props:Iprops) {\n  useEffect(()=> {\n    if(!props.init) {\n      props.initNewStoryPageThunk();\n    }\n  },[props.init])\n  if (props.init) {\n    return (\n      <StorysList \n        storys={props.storys} \n        storysIsLoad={props.isLoad} \n        lenIsMax={false} \n        addTopStoryThunk={props.addStoryThunk}/>\n    )\n  } else {\n    return (\n      <div style={{paddingTop: 20}}>\n        <MinLoadCenter/>\n      </div>\n    )\n  }\n}\nexport default connect(\n  (state: IStore) => {\n    return {\n      init: state.newStorys.isInit,\n      storys: state.newStorys.story,\n      isLoad: state.newStorys.isLoad,\n    }\n  }, {\n    initNewStoryPageThunk,\n    addStoryThunk,\n  }\n)(NewStorysContainer);","import { Istory } from \"./storys-reducersType\";\n\nexport const ADD_ASK = 'ADD_ASK';\nexport const INIT = 'INIT_ASK_REDUCER';\n\nexport interface Iask extends Istory {}\n\nexport interface IinitAskActions {\n  type: typeof INIT,\n}\nexport interface IaddAskActions {\n  type: typeof ADD_ASK,\n  ask: Iask[]\n}\nexport type IaskActions = IinitAskActions | IaddAskActions\n\nexport default interface IaskReducers {\n  questions: Iask[],\n  init: boolean,\n}","import IaskReducers, { \n  IinitAskActions,\n  IaddAskActions,\n  INIT,\n  ADD_ASK,\n  IaskActions\n} from \"./ask-reducersType\";\nimport { getAsk, getElementById } from \"../api/api\";\nimport { ImyCastomThunk } from \"./storeType\";\n\nexport type IaskReducerThunk<R> = ImyCastomThunk<R,IaskActions>\n\nconst init = (): IinitAskActions => {\n  return {\n    type: INIT\n  }\n}\nconst addAsk = (ask: any[]): IaddAskActions => {\n  return {\n    type: ADD_ASK,\n    ask,\n  }\n}\n\n\nexport const addFullAskThunk = (): IaskReducerThunk<Promise<void>> => async (dispatch: any) => {\n  return new Promise (async (res,req) => {\n    let info: any[] = await getAsk();\n    let asksPromis = [];\n    let asks: any[] = [];\n    for(let t=0; t<info.length; t++) {\n      asksPromis.push(getElementById(info[t]).then((res: any) => {\n        asks.push({\n          id: res.id,\n          author: res.by,\n          time: res.time,\n          fullLenComments: res.descendants,\n          comments: [],\n          commentsId: res.kids,\n          score: res.score,\n          header: res.title,\n          url: res.url,\n          commentsIsLoad: false,\n        })\n      }))\n    }\n    Promise.all(asksPromis).then(()=>{\n      dispatch(addAsk(asks));\n      res()\n    })\n  })\n}\nexport const initThunk = (): IaskReducerThunk<Promise<void>> => async (dispatch: any) => {\n  await dispatch(addFullAskThunk());\n  dispatch(init());\n}\n\nconst start:IaskReducers = {\n  questions: [],\n  init: false\n};\n\nexport default function askReducers (state=start, action:IaskActions):IaskReducers {\n  switch (action.type) {\n    case ADD_ASK: {\n      return {\n        ...state,\n        questions: [...state.questions, ...action.ask]\n      }\n    }\n    case INIT: {\n      return {\n        ...state,\n        init: true\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {initThunk} from '../../redux/ask-reducers';\nimport IStore from '../../redux/storeType'\nimport { Iask } from '../../redux/ask-reducersType';\nimport MinLoadCenter from '../decorComponent/minLoadCenter';\nimport StorysList from '../StoryPage/StorysList';\n\ninterface Iprops {\n  init: boolean,\n  ask: Iask[],\n  initThunk: () => void\n}\n\nfunction AskContiner(props: Iprops) {\n  useEffect(() => {\n    if(!props.init) {\n      props.initThunk();\n    }\n  },[props.init])\n  if (!props.init) {\n    return (\n      <div style={{paddingTop:'20px'}}>\n        <MinLoadCenter/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <StorysList storys={props.ask} storysIsLoad={false} lenIsMax={true}/>\n    </div>\n  )\n}\nexport default connect((state:IStore) => {\n  return {\n    init: state.ask.init,\n    ask: state.ask.questions,\n  }\n},{\n  initThunk\n})(AskContiner)","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CommentContiner from './StoryPage/StoryCommentOpen';\nimport ErorrPage from './helpers-components/ErorrPage';\nimport StorysListContiner from './StoryPage/StorysListContiner';\nimport UserPageContainer from './userPage/UserPageContainer';\nimport UserPageSub from './userPage/UserPageSubContainer';\nimport UserPageCommetns from './userPage/UserPageCommetnsContainer';\nimport JobsContainer from './jobs/JobsContainer';\nimport GetByIdPageContainer from './getById/GetByIdPageContainer.tsx';\nimport NewStorysContainer from './newStorys/newStorysContainer';\nimport AskContiner from './ask/askContiner';\n\nfunction Content (props) {\n  return (\n    <div>\n        <Switch>\n          <Route path='/getById' render={ () => <GetByIdPageContainer />} />\n          <Route path='/getById/:id' render={ () => <GetByIdPageContainer />}/>\n          <Route path='/newStorys'render={ () => <NewStorysContainer/>}/>\n          <Route path='/story/:storyId' render={ () => <CommentContiner/> }/>\n          <Route path='/story' render={() => <StorysListContiner/>}/>\n          <Route path='/user/:userId/submission' render={() => <UserPageSub/>} />\n          <Route path='/user/:userId/comments' render={() => <UserPageCommetns/>}/>\n          <Route path='/user/:userId/favorites' render={() => <div>favorites</div>}/>\n          <Route path='/user/:userId' render={() => <UserPageContainer/>}/>\n          <Route path='/ask' render={() => <AskContiner/> } />\n          <Route path='/jobs' render={() => <JobsContainer />}/>\n          <Route path='/error' render={ () => <ErorrPage/> }/>\n          <Route path='/' render={ () => <Redirect to='/story'/> }/>\n        </Switch>\n    </div>\n  )\n}\n\nexport default connect((state) => {\n  return {\n    story:state.storys.storys,\n    storysIsLoad: state.storys.storysIsLoad,\n  }\n})(Content);","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport storeReducers from './storys-reducers';\r\nimport init from './init-reducers';\r\nimport userReducers from './user-reducers';\r\nimport jobsReducer from './jobs-reducers';\r\nimport getByIdReducers from './getById-reducers';\r\nimport newStorysReducers from './newStorys-reducers';\r\nimport askReducers from './ask-reducers';\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n      state: any\r\n    }\r\n  }\r\n\r\nconst redusers = combineReducers ({\r\n    form:formReducer,\r\n    storys:storeReducers,\r\n    newStorys: newStorysReducers,\r\n    init,\r\n    users:userReducers,\r\n    jobs: jobsReducer, \r\n    getByItem: getByIdReducers,\r\n    ask: askReducers,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.state = store;\r\n\r\nexport default store;","import React,{useEffect} from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport {initThunk} from './redux/init-reducers';\nimport Header from './components/header.jsx';\nimport Content from './components/Content';\nimport store from './redux/store';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport MinLoadCenter from './components/decorComponent/minLoadCenter';\n\ninterface d {\n  isInit: boolean,\n  initThunk: () => void\n}\n\n\nconst App: React.FC<d> = (props:d) => {\n  useEffect(() => {\n    if (props.isInit) {\n      return\n    }\n    props.initThunk();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[props.isInit]);\n\n  if(!props.isInit) {\n    return (\n      <div style={{paddingTop: 15}}>\n        <MinLoadCenter/>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Header/>\n      <Content/>\n    </div>\n  );\n}\nconst AppC = function () {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppCont />\n      </Provider>\n    </HashRouter>\n  )\n}\nconst AppCont = connect(\n  (state:any) => {\n    return {\n      isInit:state.init.init,\n    }\n  },{\n    initThunk,\n  }\n)(App);\n\n/*export default connect(\n  (state:any) => {\n    return {\n      isInit:state.init.init,\n    }\n  },{\n    initThunk,\n  }\n)(App);*/\nexport default AppC\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"header_Header__17LQY\",\"Header__item\":\"header_Header__item__1ZjVz\",\"Header__wrap\":\"header_Header__wrap__1Gpp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"GetByIdPage_center__1Lyq5\",\"centerBlock\":\"GetByIdPage_centerBlock__3rpkt\",\"input\":\"GetByIdPage_input__U_dJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Story__linkComments\":\"CommentsBlock_Story__linkComments__17op8\",\"CommentBlock__content\":\"CommentsBlock_CommentBlock__content__36Lsu\",\"CommentBlock\":\"CommentsBlock_CommentBlock__2veLe\",\"CommentBlock__name\":\"CommentsBlock_CommentBlock__name__3-cQc\",\"Story\":\"CommentsBlock_Story__2jwbx\",\"Story__header\":\"CommentsBlock_Story__header__12S73\",\"Story__blockCenter\":\"CommentsBlock_Story__blockCenter__23_bP\",\"Story__link_header\":\"CommentsBlock_Story__link_header__2qslK\",\"Story__linkToProfile\":\"CommentsBlock_Story__linkToProfile__3Swji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"TableItem_col__17w9d\",\"col2\":\"TableItem_col2__3xfQ3\",\"top0\":\"TableItem_top0__py-lo\",\"top1\":\"TableItem_top1__3pDee\",\"top2\":\"TableItem_top2__1izgJ\",\"top3\":\"TableItem_top3__23pnF\",\"top4\":\"TableItem_top4__2RBg_\",\"top5\":\"TableItem_top5__3nHlr\",\"top6\":\"TableItem_top6__17W0Y\",\"top7\":\"TableItem_top7__mUkI0\",\"top8\":\"TableItem_top8__39V2R\",\"top9\":\"TableItem_top9__UY3Rv\",\"topUp0\":\"TableItem_topUp0__1B6rH\",\"up0\":\"TableItem_up0__3LxJt\",\"topUp1\":\"TableItem_topUp1__5RxuJ\",\"up1\":\"TableItem_up1__2K3Uc\",\"topUp2\":\"TableItem_topUp2__31Icf\",\"up2\":\"TableItem_up2__1Gqyq\",\"topUp3\":\"TableItem_topUp3__36eQh\",\"up3\":\"TableItem_up3__PyVe4\",\"topUp4\":\"TableItem_topUp4__3iw_P\",\"up4\":\"TableItem_up4__1_8L2\",\"topUp5\":\"TableItem_topUp5__39oEF\",\"up5\":\"TableItem_up5__1Uckj\",\"topUp6\":\"TableItem_topUp6__s5IMq\",\"up6\":\"TableItem_up6__2jWI3\",\"topUp7\":\"TableItem_topUp7__1E22k\",\"up7\":\"TableItem_up7__15-x-\",\"topUp8\":\"TableItem_topUp8__HdHYT\",\"up8\":\"TableItem_up8__33GwG\",\"topUp9\":\"TableItem_topUp9__3eN2-\",\"up9\":\"TableItem_up9__3Iome\",\"window\":\"TableItem_window__3mi7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Load\":\"load_Load__1esxs\",\"load-anim\":\"load_load-anim__EKPbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Center\":\"minLoadCenter_Center__1iLq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Jobs_List__31Qw5\"};"],"sourceRoot":""}